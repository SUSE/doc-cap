<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE appendix
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<sect1
 xml:id="app.scf.values.yaml" 
 xmlns="http://docbook.org/ns/docbook"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 version="5.0">
 <title>Complete suse/scf values.yaml File</title>

 <para>
  This is the complete output of <command>helm inspect suse/cf</command> for
  the current &productname; &productnumber; release.
 </para>

<screen>apiVersion: 2.16.4+cf6.10.0.2.g5abdb16f
appVersion: "1.4"
description: A Helm chart for SUSE Cloud Foundry
name: cf
version: 2.16.4

---
---
kube:
  auth: "rbac"
  external_ips: []

  # Whether HostPath volume mounts are available
  hostpath_available: false

  limits:
    nproc:
      hard: ""
      soft: ""
  organization: "cap"
  psp:
    nonprivileged: ~
    privileged: ~
    withsysresource: ~
  registry:
    hostname: "registry.suse.com"
    username: ""
    password: ""

  # Increment this counter to rotate all generated secrets
  secrets_generation_counter: 1

  storage_class:
    persistent: "persistent"
    shared: "shared"
config:
  # Flag to activate high-availability mode
  HA: false

  # Global memory configuration
  memory:
    # Flag to activate memory requests
    requests: false

    # Flag to activate memory limits
    limits: false

  # Global CPU configuration
  cpu:
    # Flag to activate cpu requests
    requests: false

    # Flag to activate cpu limits
    limits: false

  # Flag to specify whether to add Istio related annotations and labels
  use_istio: false

bosh:
  instance_groups: []
services:
  loadbalanced: false
secrets:
  # PEM encoded RSA private key used to identify host.
  # This value uses a generated default.
  APP_SSH_KEY: ~

  # MD5 fingerprint of the host key of the SSH proxy that brokers connections to
  # application instances.
  APP_SSH_KEY_FINGERPRINT: ~

  # PEM-encoded certificate
  # This value uses a generated default.
  AUCTIONEER_REP_CERT: ~

  # PEM-encoded key
  AUCTIONEER_REP_CERT_KEY: ~

  # PEM-encoded server certificate
  # This value uses a generated default.
  AUCTIONEER_SERVER_CERT: ~

  # PEM-encoded server key
  AUCTIONEER_SERVER_CERT_KEY: ~

  # A PEM-encoded TLS certificate for clients to connect to the Autoscaler API.
  # This includes the Autoscaler ApiServer and the Service Broker.
  # This value uses a generated default.
  AUTOSCALER_ASAPI_CLIENT_CERT: ~

  # A PEM-encoded TLS key for clients to connect to the Autoscaler API. This
  # includes the Autoscaler ApiServer and the Service Broker.
  AUTOSCALER_ASAPI_CLIENT_CERT_KEY: ~

  # A PEM-encoded TLS certificate of the Autoscaler API public https server.
  # This includes the Autoscaler ApiServer and the Service Broker.
  # This value uses a generated default.
  AUTOSCALER_ASAPI_PUBLIC_SERVER_CERT: ~

  # A PEM-encoded TLS key of the Autoscaler API public https server. This
  # includes the Autoscaler ApiServer and the Service Broker.
  AUTOSCALER_ASAPI_PUBLIC_SERVER_CERT_KEY: ~

  # A PEM-encoded TLS certificate of the Autoscaler API https server. This
  # includes the Autoscaler ApiServer and the Service Broker.
  # This value uses a generated default.
  AUTOSCALER_ASAPI_SERVER_CERT: ~

  # A PEM-encoded TLS key of the Autoscaler API https server. This includes the
  # Autoscaler ApiServer and the Service Broker.
  AUTOSCALER_ASAPI_SERVER_CERT_KEY: ~

  # A PEM-encoded TLS certificate for clients to connect to the Autoscaler
  # Metrics. This includes the Autoscaler Metrics Collector and Event Generator.
  # This value uses a generated default.
  AUTOSCALER_ASMETRICS_CLIENT_CERT: ~

  # A PEM-encoded TLS key for clients to connect to the Autoscaler Metrics. This
  # includes the Autoscaler Metrics Collector and Event Generator.
  AUTOSCALER_ASMETRICS_CLIENT_CERT_KEY: ~

  # A PEM-encoded TLS certificate of the Autoscaler Metrics https server. This
  # includes the Autoscaler Metrics Collector.
  # This value uses a generated default.
  AUTOSCALER_ASMETRICS_SERVER_CERT: ~

  # A PEM-encoded TLS key of the Autoscaler Metrics https server. This includes
  # the Autoscaler Metrics Collector.
  AUTOSCALER_ASMETRICS_SERVER_CERT_KEY: ~

  # The password for the Autoscaler postgres database.
  # This value uses a generated default.
  AUTOSCALER_DB_PASSWORD: ~

  # A PEM-encoded TLS certificate for clients to connect to the Autoscaler
  # Scaling Engine.
  # This value uses a generated default.
  AUTOSCALER_SCALING_ENGINE_CLIENT_CERT: ~

  # A PEM-encoded TLS key for clients to connect to the Autoscaler Scaling
  # Engine.
  AUTOSCALER_SCALING_ENGINE_CLIENT_CERT_KEY: ~

  # A PEM-encoded TLS certificate of the Autoscaler Scaling Engine https server.
  # This value uses a generated default.
  AUTOSCALER_SCALING_ENGINE_SERVER_CERT: ~

  # A PEM-encoded TLS key of the Autoscaler Scaling Engine https server.
  AUTOSCALER_SCALING_ENGINE_SERVER_CERT_KEY: ~

  # A PEM-encoded TLS certificate for clients to connect to the Autoscaler
  # Scheduler.
  # This value uses a generated default.
  AUTOSCALER_SCHEDULER_CLIENT_CERT: ~

  # A PEM-encoded TLS key for clients to connect to the Autoscaler Scheduler.
  AUTOSCALER_SCHEDULER_CLIENT_CERT_KEY: ~

  # A PEM-encoded TLS certificate of the Autoscaler Scheduler https server.
  # This value uses a generated default.
  AUTOSCALER_SCHEDULER_SERVER_CERT: ~

  # A PEM-encoded TLS key of the Autoscaler Scheduler https server.
  AUTOSCALER_SCHEDULER_SERVER_CERT_KEY: ~

  # The password for the Autoscaler Service Broker.
  # This value uses a generated default.
  AUTOSCALER_SERVICE_BROKER_PASSWORD: ~

  # A PEM-encoded TLS certificate of the Autoscaler API https server. This
  # includes the Autoscaler ApiServer and the Service Broker.
  # This value uses a generated default.
  AUTOSCALER_SERVICE_BROKER_SERVER_CERT: ~

  # A PEM-encoded TLS key of the Autoscaler API https server. This includes the
  # Autoscaler ApiServer and the Service Broker.
  AUTOSCALER_SERVICE_BROKER_SERVER_CERT_KEY: ~

  # the uaa client secret used by Autoscaler.
  # This value uses a generated default.
  AUTOSCALER_UAA_CLIENT_SECRET: ~

  # PEM-encoded certificate
  # This value uses a generated default.
  BBS_AUCTIONEER_CERT: ~

  # PEM-encoded key
  BBS_AUCTIONEER_CERT_KEY: ~

  # PEM-encoded client certificate.
  # This value uses a generated default.
  BBS_CLIENT_CRT: ~

  # PEM-encoded client key.
  BBS_CLIENT_CRT_KEY: ~

  # PEM-encoded certificate
  # This value uses a generated default.
  BBS_REP_CERT: ~

  # PEM-encoded key
  BBS_REP_CERT_KEY: ~

  # PEM-encoded client certificate.
  # This value uses a generated default.
  BBS_SERVER_CRT: ~

  # PEM-encoded client key.
  BBS_SERVER_CRT_KEY: ~

  # The basic auth password that the Cloud Controller uses to connect to the
  # admin endpoint on webdav.
  # This value uses a generated default.
  BITS_ADMIN_USERS_PASSWORD: ~

  # This is the key secret Bits-Service uses and clients should use to generate
  # signed URLs.
  # This value uses a generated default.
  BITS_SERVICE_SECRET: ~

  # PEM-encoded client certificate.
  # This value uses a generated default.
  BITS_SERVICE_SSL_CERT: ~

  # PEM-encoded client key.
  BITS_SERVICE_SSL_CERT_KEY: ~

  # The basic auth password that Cloud Controller uses to connect to the
  # blobstore server. Auto-generated if not provided. Passwords must be
  # alphanumeric (URL-safe).
  # This value uses a generated default.
  BLOBSTORE_PASSWORD: ~

  # The secret used for signing URLs between Cloud Controller and blobstore.
  # This value uses a generated default.
  BLOBSTORE_SECURE_LINK: ~

  # The PEM-encoded certificate (optionally as a certificate chain) for serving
  # blobs over TLS/SSL.
  # This value uses a generated default.
  BLOBSTORE_TLS_CERT: ~

  # The PEM-encoded private key for signing TLS/SSL traffic.
  BLOBSTORE_TLS_CERT_KEY: ~

  # The password for the bulk api.
  # This value uses a generated default.
  BULK_API_PASSWORD: ~

  # A map of labels and encryption keys
  CC_DB_ENCRYPTION_KEYS: "~"

  # The PEM-encoded certificate for secure TLS communication over external
  # endpoints.
  # This value uses a generated default.
  CC_PUBLIC_TLS_CERT: ~

  # The PEM-encoded key for secure TLS communication over external endpoints.
  CC_PUBLIC_TLS_CERT_KEY: ~

  # The PEM-encoded certificate for internal cloud controller traffic.
  # This value uses a generated default.
  CC_SERVER_CRT: ~

  # The PEM-encoded private key for internal cloud controller traffic.
  CC_SERVER_CRT_KEY: ~

  # The PEM-encoded certificate for internal cloud controller uploader traffic.
  # This value uses a generated default.
  CC_UPLOADER_CRT: ~

  # The PEM-encoded private key for internal cloud controller uploader traffic.
  CC_UPLOADER_CRT_KEY: ~

  # PEM-encoded broker server certificate.
  # This value uses a generated default.
  CF_USB_BROKER_SERVER_CERT: ~

  # PEM-encoded broker server key.
  CF_USB_BROKER_SERVER_CERT_KEY: ~

  # The password for access to the Universal Service Broker.
  # This value uses a generated default.
  # Example: "password"
  CF_USB_PASSWORD: ~

  # The password for the cluster administrator.
  CLUSTER_ADMIN_PASSWORD: ~

  # PEM-encoded server certificate
  # This value uses a generated default.
  CREDHUB_SERVER_CERT: ~

  # PEM-encoded server key
  CREDHUB_SERVER_CERT_KEY: ~

  # PEM-encoded client certificate
  # This value uses a generated default.
  DIEGO_CLIENT_CERT: ~

  # PEM-encoded client key
  DIEGO_CLIENT_CERT_KEY: ~

  # PEM-encoded certificate.
  # This value uses a generated default.
  DOPPLER_CERT: ~

  # PEM-encoded key.
  DOPPLER_CERT_KEY: ~

  # Basic auth password for access to the Cloud Controller's internal API.
  # This value uses a generated default.
  INTERNAL_API_PASSWORD: ~

  # PEM-encoded CA certificate used to sign the TLS certificate used by all
  # components to secure their communications.
  # This value uses a generated default.
  INTERNAL_CA_CERT: ~

  # PEM-encoded CA key.
  INTERNAL_CA_CERT_KEY: ~

  # PEM-encoded certificate.
  # This value uses a generated default.
  LOGGREGATOR_AGENT_CERT: ~

  # PEM-encoded key.
  LOGGREGATOR_AGENT_CERT_KEY: ~

  # PEM-encoded client certificate for loggregator mutual authentication
  # This value uses a generated default.
  LOGGREGATOR_CLIENT_CERT: ~

  # PEM-encoded client key for loggregator mutual authentication
  LOGGREGATOR_CLIENT_CERT_KEY: ~

  # PEM-encoded client certificate for loggregator forwarder authentication
  # This value uses a generated default.
  LOGGREGATOR_FORWARD_CERT: ~

  # PEM-encoded client key for loggregator forwarder authentication
  LOGGREGATOR_FORWARD_CERT_KEY: ~

  # PEM-encoded certificate.
  # This value uses a generated default.
  LOG_CACHE_CERT: ~

  # PEM-encoded key.
  LOG_CACHE_CERT_KEY: ~

  # PEM-encoded certificate.
  # This value uses a generated default.
  LOG_CACHE_TO_LOGGREGATOR_AGENT_CERT: ~

  # PEM-encoded key.
  LOG_CACHE_TO_LOGGREGATOR_AGENT_CERT_KEY: ~

  # Password used for the monit API.
  # This value uses a generated default.
  MONIT_PASSWORD: ~

  # The password for the MySQL server admin user.
  # This value uses a generated default.
  MYSQL_ADMIN_PASSWORD: ~

  # The password for access to the Cloud Controller database.
  # This value uses a generated default.
  MYSQL_CCDB_ROLE_PASSWORD: ~

  # The password for access to the usb config database.
  # This value uses a generated default.
  # Example: "password"
  MYSQL_CF_USB_PASSWORD: ~

  # The password for the cluster logger health user.
  # This value uses a generated default.
  MYSQL_CLUSTER_HEALTH_PASSWORD: ~

  # The password for access to the credhub-user database.
  # This value uses a generated default.
  MYSQL_CREDHUB_USER_PASSWORD: ~

  # Database password for the diego locket service.
  # This value uses a generated default.
  MYSQL_DIEGO_LOCKET_PASSWORD: ~

  # The password for access to MySQL by diego.
  # This value uses a generated default.
  MYSQL_DIEGO_PASSWORD: ~

  # Password used to authenticate to the MySQL Galera healthcheck endpoint.
  # This value uses a generated default.
  MYSQL_GALERA_HEALTHCHECK_ENDPOINT_PASSWORD: ~

  # Database password for storing broker state for the Persi NFS Broker
  # This value uses a generated default.
  MYSQL_PERSI_NFS_PASSWORD: ~

  # The password for Basic Auth used to secure the MySQL proxy API.
  # This value uses a generated default.
  MYSQL_PROXY_ADMIN_PASSWORD: ~

  # The password for access to MySQL by the routing-api
  # This value uses a generated default.
  MYSQL_ROUTING_API_PASSWORD: ~

  # The password for access to NATS.
  # This value uses a generated default.
  NATS_PASSWORD: ~

  # Basic auth password to verify on incoming Service Broker requests
  # This value uses a generated default.
  PERSI_NFS_BROKER_PASSWORD: ~

  # LDAP service account password (required for LDAP integration only)
  PERSI_NFS_DRIVER_LDAP_PASSWORD: "-"

  # PEM-encoded server certificate
  # This value uses a generated default.
  REP_SERVER_CERT: ~

  # PEM-encoded server key
  REP_SERVER_CERT_KEY: ~

  # Support for route services is disabled when no value is configured. A robust
  # passphrase is recommended.
  # This value uses a generated default.
  ROUTER_SERVICES_SECRET: ~

  # The public ssl cert for ssl termination. Will be ignored if ROUTER_TLS_PEM
  # is set.
  # This value uses a generated default.
  ROUTER_SSL_CERT: ~

  # The private ssl key for ssl termination. Will be ignored if ROUTER_TLS_PEM
  # is set.
  ROUTER_SSL_CERT_KEY: ~

  # Password for HTTP basic auth to the varz/status endpoint.
  # This value uses a generated default.
  ROUTER_STATUS_PASSWORD: ~

  # Array of private keys and certificates used for TLS handshakes with
  # downstream clients. Each element in the array is an object containing fields
  # 'private_key' and 'cert_chain', each of which supports a PEM block. This
  # setting overrides ROUTER_SSL_CERT and ROUTER_SSL_KEY.
  # Example:
  #   - cert_chain: |
  #       -----BEGIN CERTIFICATE-----
  #       -----END CERTIFICATE-----
  #       -----BEGIN CERTIFICATE-----
  #       -----END CERTIFICATE-----
  #     private_key: |
  #       -----BEGIN RSA PRIVATE KEY-----
  #       -----END RSA PRIVATE KEY-----
  ROUTER_TLS_PEM: ~

  # The password for access to the uploader of staged droplets.
  # This value uses a generated default.
  STAGING_UPLOAD_PASSWORD: ~

  # PEM-encoded certificate
  # This value uses a generated default.
  SYSLOG_ADAPT_CERT: ~

  # PEM-encoded key.
  SYSLOG_ADAPT_CERT_KEY: ~

  # PEM-encoded certificate
  # This value uses a generated default.
  SYSLOG_RLP_CERT: ~

  # PEM-encoded key.
  SYSLOG_RLP_CERT_KEY: ~

  # PEM-encoded certificate
  # This value uses a generated default.
  SYSLOG_SCHED_CERT: ~

  # PEM-encoded key.
  SYSLOG_SCHED_CERT_KEY: ~

  # PEM-encoded client certificate for internal communication between the cloud
  # controller and TPS.
  # This value uses a generated default.
  TPS_CC_CLIENT_CRT: ~

  # PEM-encoded client key for internal communication between the cloud
  # controller and TPS.
  TPS_CC_CLIENT_CRT_KEY: ~

  # PEM-encoded certificate for communication with the traffic controller of the
  # log infra structure.
  # This value uses a generated default.
  TRAFFICCONTROLLER_CERT: ~

  # PEM-encoded key for communication with the traffic controller of the log
  # infra structure.
  TRAFFICCONTROLLER_CERT_KEY: ~

  # The password of the admin client - a client named admin with uaa.admin as an
  # authority.
  UAA_ADMIN_CLIENT_SECRET: ~

  # The CA certificate for UAA
  UAA_CA_CERT: ~

  # The password for UAA access by the Cloud Controller.
  # This value uses a generated default.
  UAA_CC_CLIENT_SECRET: ~

  # The password for UAA access by the Routing API.
  # This value uses a generated default.
  UAA_CLIENTS_CC_ROUTING_SECRET: ~

  # Used for third party service dashboard SSO.
  # This value uses a generated default.
  UAA_CLIENTS_CC_SERVICE_DASHBOARDS_CLIENT_SECRET: ~

  # Used for fetching service key values from CredHub.
  # This value uses a generated default.
  UAA_CLIENTS_CC_SERVICE_KEY_CLIENT_SECRET: ~

  # The password for UAA access by the Universal Service Broker.
  # This value uses a generated default.
  UAA_CLIENTS_CF_USB_SECRET: ~

  # The password for UAA access by the Cloud Controller for fetching usernames.
  # This value uses a generated default.
  UAA_CLIENTS_CLOUD_CONTROLLER_USERNAME_LOOKUP_SECRET: ~

  # The password for UAA access by the client for the user-accessible credhub
  # This value uses a generated default.
  UAA_CLIENTS_CREDHUB_USER_CLI_SECRET: ~

  # The password for UAA access by the SSH proxy.
  # This value uses a generated default.
  UAA_CLIENTS_DIEGO_SSH_PROXY_SECRET: ~

  # The password for UAA access by doppler.
  # This value uses a generated default.
  UAA_CLIENTS_DOPPLER_SECRET: ~

  # The password for UAA access by the gorouter.
  # This value uses a generated default.
  UAA_CLIENTS_GOROUTER_SECRET: ~

  # The password for UAA access by the login client.
  # This value uses a generated default.
  UAA_CLIENTS_LOGIN_SECRET: ~

  # The password for UAA access by the task creating the cluster administrator
  # user
  # This value uses a generated default.
  UAA_CLIENTS_SCF_AUTO_CONFIG_SECRET: ~

  # The password for UAA access by the TCP emitter.
  # This value uses a generated default.
  UAA_CLIENTS_TCP_EMITTER_SECRET: ~

  # The password for UAA access by the TCP router.
  # This value uses a generated default.
  UAA_CLIENTS_TCP_ROUTER_SECRET: ~

env:
  # The number of parallel test executors to spawn for Cloud Foundry acceptance
  # tests. The larger the number the higher the stress on the system.
  ACCEPTANCE_TEST_NODES: "4"

  # List of domains (including scheme) from which Cross-Origin requests will be
  # accepted, a * can be used as a wildcard for any part of a domain.
  ALLOWED_CORS_DOMAINS: "[]"

  # Allow users to change the value of the app-level allow_ssh attribute.
  ALLOW_APP_SSH_ACCESS: "true"

  # Extra token expiry time while uploading big apps, in seconds.
  APP_TOKEN_UPLOAD_GRACE_PERIOD: "1200"

  # The TTL of credential cache for the Autoscaler custom metrics, in seconds
  AUTOSCALER_API_SERVER_CACHE_TTL: "600"

  # Idle connection timeout for the Autoscaler API Server database, in seconds.
  AUTOSCALER_API_SERVER_DB_CONFIG_IDLE_TIMEOUT: "100"

  # The maximum number of connections to the Autoscaler API Server database.
  AUTOSCALER_API_SERVER_DB_CONFIG_MAX_CONNECTIONS: "10"

  # The minimum number of connections to the Autoscaler API Server database.
  AUTOSCALER_API_SERVER_DB_CONFIG_MIN_CONNECTIONS: "0"

  # The build version of Autoscaler. It should be defined when it is deployed to
  # a product environment.
  AUTOSCALER_API_SERVER_INFO_BUILD: "beta"

  # The description of Autoscaler. It should be defined when it is deployed to a
  # product environment.
  AUTOSCALER_API_SERVER_INFO_DESCRIPTION: "autoscaler"

  # The name of the Autoscaler API Server. It should be defined when it is
  # deployed to a product environment.
  AUTOSCALER_API_SERVER_INFO_NAME: "autoscalerapiserver"

  # The support url of autoscaler where the users could find support
  # information. It should be defined when it is deployed to a product
  # environment.
  AUTOSCALER_API_SERVER_INFO_SUPPORT_URL: ""

  # The maximum age of a connection that can be reused for the Autoscaler
  # appmetrics database.
  AUTOSCALER_APPMETRICS_DB_CONNECTION_CONFIG_CONNECTION_MAX_LIFETIME: "60s"

  # The maximum number of connections to the Autoscaler appmetrics database.
  AUTOSCALER_APPMETRICS_DB_CONNECTION_CONFIG_MAX_IDLE_CONNECTIONS: "10"

  # The minimum number of connections to the Autoscaler appmetrics database.
  AUTOSCALER_APPMETRICS_DB_CONNECTION_CONFIG_MAX_OPEN_CONNECTIONS: "100"

  # The maximum number of connections the Autoscaler postgres database server
  # could serve.
  AUTOSCALER_DATABASE_MAX_CONNECTIONS: "1000"

  # The default breach duration for the Autoscaler Event Generator, in
  # seconds.The breach duration means the App Autoscaler won’t take the
  # desired adjustment until the application has been breaching the Autoscaler
  # policy for a period longer than breach_duration_secs setting.
  AUTOSCALER_DEFAULT_BREACH_DURATION_SECS: "300"

  # The default cooldown duration between two scaling action for the Autoscaler
  # Event Generator, in seconds.
  AUTOSCALER_DEFAULT_COOLDOWN_SECS: "300"

  # The default statistic window duration between two scaling action for the
  # Autoscaler Event Generator, in seconds.
  AUTOSCALER_DEFAULT_STAT_WINDOW_SECS: "300"

  # The size of golang channel used by the Autoscaler Event Generator as a
  # buffer to save metrics by batch.
  AUTOSCALER_EVENT_GENERATOR_AGGREGATOR_APP_METRIC_CHANNEL_SIZE: "1000"

  # The size of golang channel used by the Autoscaler Event Generator to
  # exchange data.
  AUTOSCALER_EVENT_GENERATOR_AGGREGATOR_APP_MONITOR_CHANNEL_SIZE: "200"

  # The duration defines how long does Autoscaler Event Generator aggregate
  # appmetrics.
  AUTOSCALER_EVENT_GENERATOR_AGGREGATOR_EXECUTE_INTERVAL: "40s"

  # The number of metricpollers in Autoscaler Event Generator.
  AUTOSCALER_EVENT_GENERATOR_AGGREGATOR_METRIC_POLLER_COUNT: "20"

  # The duration defines how long does the Autoscaler Event Generator reload
  # data from policy database.
  AUTOSCALER_EVENT_GENERATOR_AGGREGATOR_POLICY_POLLER_INTERVAL: "40s"

  # The duration defines how long does the Autoscaler Event Generator save
  # appmetrics to database by batch.
  AUTOSCALER_EVENT_GENERATOR_AGGREGATOR_SAVE_INTERVAL: "5s"

  # The initial exponential back off interval for the circuit breaker of the
  # Autoscaler Event Generator.
  AUTOSCALER_EVENT_GENERATOR_CIRCUIT_BREAKER_BACK_OFF_INITIAL_INTERVAL: "5m"

  # The maximum exponential back off interval for the circuit breaker of the
  # Autoscaler Event Generator.
  AUTOSCALER_EVENT_GENERATOR_CIRCUIT_BREAKER_BACK_OFF_MAX_INTERVAL: "120m"

  # The number of consecutive failure to trip the circuit down for the circuit
  # breaker of the Autoscaler Event Generator.
  AUTOSCALER_EVENT_GENERATOR_CIRCUIT_BREAKER_CONSECUTIVE_FAILURE_COUNT: "3"

  # The duration defines how long does the Autoscaler Event Generator evaluate
  # appmetrics.
  AUTOSCALER_EVENT_GENERATOR_EVALUATOR_EVALUATION_MANAGER_EXECUTE_INTERVAL: "40s"

  # The number of evaluators in the Autoscaler Event Generator.
  AUTOSCALER_EVENT_GENERATOR_EVALUATOR_EVALUATOR_COUNT: "20"

  # The size of golang channel used by the Autoscaler Event Generator App
  # Evaluation Manager to pass triggers to evaluators.
  AUTOSCALER_EVENT_GENERATOR_EVALUATOR_TRIGGER_ARRAY_CHANNEL_SIZE: "200"

  # The maximum age of a connection that can be reused for the Autoscaler
  # instance metrics database.
  AUTOSCALER_INSTANCE_METRICS_DB_CONNECTION_CONFIG_CONNECTION_MAX_LIFETIME: "60s"

  # The maximum number of idle connections to the Autoscaler instance metrics
  # database.
  AUTOSCALER_INSTANCE_METRICS_DB_CONNECTION_CONFIG_MAX_IDLE_CONNECTIONS: "10"

  # The maximum number of connections to the Autoscaler instance metrics
  # database.
  AUTOSCALER_INSTANCE_METRICS_DB_CONNECTION_CONFIG_MAX_OPEN_CONNECTIONS: "100"

  # The maximum age of a connection that can be reused for the Autoscaler lock
  # database.
  AUTOSCALER_LOCK_DB_CONNECTION_CONFIG_CONNECTION_MAX_LIFETIME: "60s"

  # The maximum number of idle connections to the Autoscaler lock database.
  AUTOSCALER_LOCK_DB_CONNECTION_CONFIG_MAX_IDLE_CONNECTIONS: "10"

  # The maximum number of connections to the Autoscaler lock database.
  AUTOSCALER_LOCK_DB_CONNECTION_CONFIG_MAX_OPEN_CONNECTIONS: "100"

  # The duration defines how long does the Autoscaler Metrics Collector
  # aggregate collected instance metrics.
  AUTOSCALER_METRICS_COLLECTOR_COLLECTOR_COLLECT_INTERVAL: "30s"

  # The duration defines how long does the Autoscaler Metrics Collector reload
  # data from policy database.
  AUTOSCALER_METRICS_COLLECTOR_COLLECTOR_REFRESH_INTERVAL: "60s"

  # The duration defines how long does the Autoscaler Metrics Collector save
  # instance metrics to database by batch.
  AUTOSCALER_METRICS_COLLECTOR_COLLECTOR_SAVE_INTERVAL: "30s"

  # The method type of the Autoscaler Metrics Collector to fetch metrics from
  # cloudfoundry: polling or streaming.
  AUTOSCALER_METRICS_COLLECTOR_COLLECT_METHOD: "streaming"

  # The duration defines how many days of appmetrics data does the Autoscaler
  # Operator kept for each pruning.
  AUTOSCALER_OPERATOR_APP_METRICS_DB_CUTOFF_DAYS: "30"

  # The duration between two pruning opertions for appmetrics database in the
  # Autoscaler Operator.
  AUTOSCALER_OPERATOR_APP_METRICS_DB_REFRESH_INTERVAL: "24h"

  # The interval of synchronizing applications information between AutoScaler
  # policy database and Cloudfoundry.
  AUTOSCALER_OPERATOR_APP_SYNC_INTERVAL: "24h"

  # Whether to enable the Autoscaler Operator's db lock. If there are more than
  # one operators, the value should be true
  AUTOSCALER_OPERATOR_ENABLE_DB_LOCK: "true"

  # The duration defines how many days of instance metrics data does the
  # Autoscaler Operator kept for each pruning.
  AUTOSCALER_OPERATOR_INSTANCE_METRICS_DB_CUTOFF_DAYS: "30"

  # The duration between two pruning opertions for instance metrics database in
  # the Autoscaler Operator.
  AUTOSCALER_OPERATOR_INSTANCE_METRICS_DB_REFRESH_INTERVAL: "24h"

  # The interval for each Autoscaler Operator instance to retry to get database
  # lock.
  AUTOSCALER_OPERATOR_LOCK_RETRY_INTERVAL: "10s"

  # The maximum duration of a Autoscaler Operator instance could hold the
  # database lock.
  AUTOSCALER_OPERATOR_LOCK_TTL: "15s"

  # The duration defines how many days of the scaling history data does the
  # Autoscaler Operator kept for each pruning.
  AUTOSCALER_OPERATOR_SCALING_ENGINE_DB_CUTOFF_DAYS: "30"

  # The duration between two pruning opertions for scalingengine database in the
  # Autoscaler Operator.
  AUTOSCALER_OPERATOR_SCALING_ENGINE_DB_FRESH_INTERVAL: "24h"

  # The interval of synchronizing the Autoscaler Scaling Engine active schedules
  # with Autoscaler Scheduler.
  AUTOSCALER_OPERATOR_SCALING_ENGINE_SYNC_INTERVAL: "600s"

  # The interval of synchronizing the Autoscaler Scheduler schedules with policy
  # database.
  AUTOSCALER_OPERATOR_SCHEDULER_SYNC_INTERVAL: "600s"

  # The maximum age of a connection that can be reused for the Autoscaler policy
  # database.
  AUTOSCALER_POLICY_DB_CONNECTION_CONFIG_CONNECTION_MAX_LIFETIME: "60s"

  # The maximum number of idle connections to the Autoscaler policy database.
  AUTOSCALER_POLICY_DB_CONNECTION_CONFIG_MAX_IDLE_CONNECTIONS: "10"

  # The maximum number of connections to the Autoscaler policy database.
  AUTOSCALER_POLICY_DB_CONNECTION_CONFIG_MAX_OPEN_CONNECTIONS: "100"

  # The maximum age of a connection that can be reused for the Autoscaler
  # Scaling Engine database.
  AUTOSCALER_SCALING_ENGINE_DB_CONNECTION_CONFIG_CONNECTION_MAX_LIFETIME: "60s"

  # The maximum number of idle connections to the Autoscaler Scaling Engine
  # database.
  AUTOSCALER_SCALING_ENGINE_DB_CONNECTION_CONFIG_MAX_IDLE_CONNECTIONS: "10"

  # The maximum number of connections to the Autoscaler Scaling Engine database.
  AUTOSCALER_SCALING_ENGINE_DB_CONNECTION_CONFIG_MAX_OPEN_CONNECTIONS: "100"

  # The time interval to emit health metrics for the Autoscaler Scaling Engine."
  AUTOSCALER_SCALING_ENGINE_HEALTH_EMIT_INTERVAL: "15s"

  # The lock number of the Autoscaler Scaling Engine to do synchronization for
  # multiple scaling requests.
  AUTOSCALER_SCALING_ENGINE_LOCK_SIZE: "32"

  # The maximum age of a connection that can be reused for the Autoscaler
  # Scheduler database.
  AUTOSCALER_SCHEDULER_DB_CONNECTION_CONFIG_CONNECTION_MAX_LIFETIME: "60s"

  # The maximum number of idle connections to the Autoscaler Scheduler database.
  AUTOSCALER_SCHEDULER_DB_CONNECTION_CONFIG_MAX_IDLE_CONNECTIONS: "10"

  # The maximum number of connections to the Autoscaler Scaling Engine database.
  AUTOSCALER_SCHEDULER_DB_CONNECTION_CONFIG_MAX_OPEN_CONNECTIONS: "100"

  # Rescheduling interval for quartz job for the Autoscaler Scheduler, in
  # milliseconds.
  AUTOSCALER_SCHEDULER_JOB_RESCHEDULE_INTERVAL_MILISECOND: "100"

  # Maximum number of jobs can be re-scheduled in the Autoscaler Scheduler.
  AUTOSCALER_SCHEDULER_JOB_RESCHEDULE_MAXCOUNT: "6"

  # Maximum number of notification sent to Autoscaler Scaling Engine for job
  # re-schedule.
  AUTOSCALER_SCHEDULER_NOTIFICATION_RESCHEDULE_MAXCOUNT: "3"

  # Idle connection timeout for the Autoscaler Service Broker database, in
  # seconds.
  AUTOSCALER_SERVICE_BROKER_DB_CONFIG_IDLE_TIMEOUT: "1000"

  # The maximum number of connections to the Autoscaler Service Broker database.
  AUTOSCALER_SERVICE_BROKER_DB_CONFIG_MAX_CONNECTIONS: "10"

  # The minimum number of connections to the Autoscaler Service Broker database.
  AUTOSCALER_SERVICE_BROKER_DB_CONFIG_MIN_CONNECTIONS: "0"

  # The timeout in milliseconds for http request from Autoscaler Service Broker
  # to other Autoscaler components.
  AUTOSCALER_SERVICE_BROKER_HTTP_REQUEST_TIMEOUT: "5000"

  # Whether Autoscaler is provided as a cloudfoundry service, default is false.
  AUTOSCALER_SERVICE_OFFERING_ENABLED: "false"

  # The name of the metadata label to query on worker nodes to get AZ
  # information. When set, the cells will query their worker node for AZ
  # information and inject the result into cloudfoundry via the KUBE_AZ
  # parameter. When left to the default no custom AZ processing is done.
  AZ_LABEL_NAME: ""

  # List of allow / deny rules for the blobstore internal server. Will be
  # followed by 'deny all'. Each entry must be follow by a semicolon.
  BLOBSTORE_ACCESS_RULES: "allow 10.0.0.0/8; allow 172.16.0.0/12; allow 192.168.0.0/16;"

  # Maximal allowed file size for upload to blobstore, in megabytes.
  BLOBSTORE_MAX_UPLOAD_SIZE: "5000"

  # For requests to service brokers, this is the HTTP (open and read) timeout
  # setting, in seconds.
  BROKER_CLIENT_TIMEOUT_SECONDS: "70"

  # The set of CAT test suites to run. If not specified it falls back to a
  # hardwired set of suites.
  CATS_SUITES: ~

  # The key used to encrypt entries in the CC database
  CC_DB_CURRENT_KEY_LABEL: ""

  # URI for a CDN to use for buildpack downloads.
  CDN_URI: ""

  # Expiration for generated certificates (in days)
  CERT_EXPIRATION: "10950"

  # The Oauth2 authorities available to the cluster administrator.
  CLUSTER_ADMIN_AUTHORITIES: "scim.write,scim.read,openid,cloud_controller.admin,clients.read,clients.write,doppler.firehose,routing.router_groups.read,routing.router_groups.write"

  # 'build' attribute in the /v2/info endpoint
  CLUSTER_BUILD: "2.0.2"

  # 'description' attribute in the /v2/info endpoint
  CLUSTER_DESCRIPTION: "SUSE Cloud Foundry"

  # 'name' attribute in the /v2/info endpoint
  CLUSTER_NAME: "SCF"

  # 'version' attribute in the /v2/info endpoint
  CLUSTER_VERSION: "2"

  # The standard amount of disk (in MB) given to an application when not
  # overriden by the user via manifest, command line, etc.
  DEFAULT_APP_DISK_IN_MB: "1024"

  # The standard amount of memory (in MB) given to an application when not
  # overriden by the user via manifest, command line, etc.
  DEFAULT_APP_MEMORY: "1024"

  # If set apps pushed to spaces that allow SSH access will have SSH enabled by
  # default.
  DEFAULT_APP_SSH_ACCESS: "true"

  # The default stack to use if no custom stack is specified by an app.
  DEFAULT_STACK: "sle15"

  # The container disk capacity the cell should manage. If this capacity is
  # larger than the actual disk quota of the cell component, over-provisioning
  # will occur.
  DIEGO_CELL_DISK_CAPACITY_MB: "auto"

  # The memory capacity the cell should manage. If this capacity is larger than
  # the actual memory of the cell component, over-provisioning will occur.
  DIEGO_CELL_MEMORY_CAPACITY_MB: "auto"

  # Maximum network transmission unit length in bytes for application
  # containers.
  DIEGO_CELL_NETWORK_MTU: "1400"

  # A CIDR subnet mask specifying the range of subnets available to be assigned
  # to containers.
  DIEGO_CELL_SUBNET: "10.38.0.0/16"

  # Disable external buildpacks. Only admin buildpacks and system buildpacks
  # will be available to users.
  DISABLE_CUSTOM_BUILDPACKS: "false"

  # Base domain of the SCF cluster.
  # Example: "my-scf-cluster.com"
  DOMAIN: ~

  # The number of versions of an application to keep. You will be able to
  # rollback to this amount of versions.
  DROPLET_MAX_STAGED_STORED: "5"

  # The docker image used by Eirini to register the image registry CA cert with
  # Docker, on each Kubernetes node
  EIRINI_CERT_COPIER_IMAGE: "splatform/eirini-cert-copier:1.0.0.4.gd8e7208"

  # The docker image used by Eirini to consume Kubernetes container logs
  EIRINI_FLUENTD_IMAGE: "eirini/loggregator-fluentd:0.1.0"

  # Docker Image used for staging apps deployed using Eirini
  EIRINI_IMAGE: "eirini/recipe:ci-24.0.0"

  # Address of Kubernetes' Heapster installation, used for reading Cloud Foundry
  # app metrics.
  EIRINI_KUBE_HEAPSTER_ADDRESS: "http://heapster.kube-system/apis/metrics/v1alpha1"

  # The namespace used by Eirini for deploying applications.
  EIRINI_KUBE_NAMESPACE: "eirini"

  # By default, Cloud Foundry does not enable Cloud Controller request logging.
  # To enable this feature, you must set this property to "true". You can learn
  # more about the format of the logs here
  # https://docs.cloudfoundry.org/loggregator/cc-uaa-logging.html#cc
  ENABLE_SECURITY_EVENT_LOGGING: "false"

  # Enables setting the X-Forwarded-Proto header if SSL termination happened
  # upstream and the header value was set incorrectly. When this property is set
  # to true, the gorouter sets the header X-Forwarded-Proto to https. When this
  # value set to false, the gorouter sets the header X-Forwarded-Proto to the
  # protocol of the incoming request.
  FORCE_FORWARDED_PROTO_AS_HTTPS: "false"

  # AppArmor profile name for garden-runc; set this to empty string to disable
  # AppArmor support
  GARDEN_APPARMOR_PROFILE: "garden-default"

  # URL pointing to the Docker registry used for fetching Docker images. If not
  # set, the Docker service default is used.
  GARDEN_DOCKER_REGISTRY: "registry-1.docker.io"

  # Override DNS servers to be used in containers; defaults to the same as the
  # host.
  GARDEN_LINUX_DNS_SERVER: ""

  # The filesystem driver to use (btrfs or overlay-xfs).
  GARDEN_ROOTFS_DRIVER: "btrfs"

  # Location of the proxy to use for secure web access.
  HTTPS_PROXY: ~

  # Location of the proxy to use for regular web access.
  HTTP_PROXY: ~

  # A comma-separated whitelist of insecure Docker registries in the form of
  # '[HOSTNAME|IP]:PORT'. Each registry must be quoted separately.
  #
  # Example: "\"docker-registry.example.com:80\", \"hello.example.org:443\""
  INSECURE_DOCKER_REGISTRIES: ""

  KUBERNETES_CLUSTER_DOMAIN: ~

  # The cluster's log level: off, fatal, error, warn, info, debug, debug1,
  # debug2.
  LOG_LEVEL: "info"

  # The maximum amount of disk a user can request for an application via
  # manifest, command line, etc., in MB. See also DEFAULT_APP_DISK_IN_MB for the
  # standard amount.
  MAX_APP_DISK_IN_MB: "2048"

  # Maximum health check timeout that can be set for an app, in seconds.
  MAX_HEALTH_CHECK_TIMEOUT: "180"

  # The time allowed for the MySQL server to respond to healthcheck queries, in
  # milliseconds.
  MYSQL_PROXY_HEALTHCHECK_TIMEOUT: "30000"

  # Sets the maximum allowed size of the client request body, specified in the
  # “Content-Length” request header field, in megabytes. If the size in a
  # request exceeds the configured value, the 413 (Request Entity Too Large)
  # error is returned to the client. Please be aware that browsers cannot
  # correctly display this error. Setting size to 0 disables checking of client
  # request body size. This limits application uploads, buildpack uploads, etc.
  NGINX_MAX_REQUEST_BODY_SIZE: "2048"

  # Comma separated list of IP addresses and domains which should not be
  # directoed through a proxy, if any.
  NO_PROXY: ~

  # Comma separated list of white-listed options that may be set during create
  # or bind operations.
  # Example:
  # "uid,gid,allow_root,allow_other,nfs_uid,nfs_gid,auto_cache,fsname,username,password"
  PERSI_NFS_ALLOWED_OPTIONS: "uid,gid,auto_cache,username,password"

  # Comma separated list of default values for nfs mount options. If a default
  # is specified with an option not included in PERSI_NFS_ALLOWED_OPTIONS, then
  # this default value will be set and it won't be overridable.
  PERSI_NFS_DEFAULT_OPTIONS: ~

  # Comma separated list of white-listed options that may be accepted in the
  # mount_config options. Note a specific 'sloppy_mount:true' volume option
  # tells the driver to ignore non-white-listed options, while a
  # 'sloppy_mount:false' tells the driver to fail fast instead when receiving a
  # non-white-listed option."
  #
  # Example:
  # "allow_root,allow_other,nfs_uid,nfs_gid,auto_cache,sloppy_mount,fsname"
  PERSI_NFS_DRIVER_ALLOWED_IN_MOUNT: "auto_cache"

  # Comma separated list of white-listed options that may be configured in
  # supported in the mount_config.source URL query params.
  # Example: "uid,gid,auto-traverse-mounts,dircache"
  PERSI_NFS_DRIVER_ALLOWED_IN_SOURCE: "uid,gid"

  # Comma separated list default values for options that may be configured in
  # the mount_config options, formatted as 'option:default'. If an option is not
  # specified in the volume mount, or the option is not white-listed, then the
  # specified default value will be used instead.
  #
  # Example:
  # "allow_root:false,nfs_uid:2000,nfs_gid:2000,auto_cache:true,sloppy_mount:true"
  PERSI_NFS_DRIVER_DEFAULT_IN_MOUNT: "auto_cache:true"

  # Comma separated list of default values for options in the source URL query
  # params, formatted as 'option:default'. If an option is not specified in the
  # volume mount, or the option is not white-listed, then the specified default
  # value will be applied.
  PERSI_NFS_DRIVER_DEFAULT_IN_SOURCE: ~

  # Disable Persi NFS driver
  PERSI_NFS_DRIVER_DISABLE: "false"

  # LDAP server host name or ip address (required for LDAP integration only)
  PERSI_NFS_DRIVER_LDAP_HOST: ""

  # LDAP server port (required for LDAP integration only)
  PERSI_NFS_DRIVER_LDAP_PORT: "389"

  # LDAP server protocol (required for LDAP integration only)
  PERSI_NFS_DRIVER_LDAP_PROTOCOL: "tcp"

  # LDAP service account user name (required for LDAP integration only)
  PERSI_NFS_DRIVER_LDAP_USER: ""

  # LDAP fqdn for user records we will search against when looking up user uids
  # (required for LDAP integration only)
  # Example: "cn=Users,dc=corp,dc=test,dc=com"
  PERSI_NFS_DRIVER_LDAP_USER_FQDN: ""

  # The name of the metadata label to query on worker nodes to get placement tag
  # information, also known as isolation segments. When set, the cells will
  # query their worker node for placement information and inject the result into
  # cloudfoundry via the KUBE_PZ parameter. When left to the default no custom
  # placement processing is done.
  PZ_LABEL_NAME: ""

  # Certficates to add to the rootfs trust store. Multiple certs are possible by
  # concatenating their definitions into one big block of text.
  ROOTFS_TRUSTED_CERTS: ""

  # The algorithm used by the router to distribute requests for a route across
  # back-ends. Supported values are round-robin and least-connection.
  ROUTER_BALANCING_ALGORITHM: "round-robin"

  # How to handle client certificates. Supported values are none, request, or
  # require. See
  # https://docs.cloudfoundry.org/adminguide/securing-traffic.html#gorouter_mutual_auth
  # for more information.
  ROUTER_CLIENT_CERT_VALIDATION: "request"

  # How to handle the x-forwarded-client-cert (XFCC) HTTP header. Supported
  # values are always_forward, forward, and sanitize_set. See
  # https://docs.cloudfoundry.org/concepts/http-routing.html for more
  # information.
  ROUTER_FORWARDED_CLIENT_CERT: "always_forward"

  # The log destination to talk to. This has to point to a syslog server.
  SCF_LOG_HOST: ~

  # The port used by rsyslog to talk to the log destination. It defaults to 514,
  # the standard port of syslog.
  SCF_LOG_PORT: "514"

  # The protocol used by rsyslog to talk to the log destination. The allowed
  # values are tcp, and udp. The default is tcp.
  SCF_LOG_PROTOCOL: "tcp"

  # Timeout for staging an app, in seconds.
  STAGING_TIMEOUT: "900"

  # Support contact information for the cluster
  SUPPORT_ADDRESS: "support@example.com"

  # Regex for which SITS tests the test runner should focus on executing.
  SYNC_INTEGRATION_TESTS_FOCUS: ~

  # The number of parallel test executors to spawn for Cloud Foundry sync
  # integration tests.
  SYNC_INTEGRATION_TESTS_NODES: "4"

  # Regex for which SITS tests the test runner should skip.
  SYNC_INTEGRATION_TESTS_SKIP: ~

  # Whether the output of the sync integration tests should be verbose or not.
  SYNC_INTEGRATION_TESTS_VERBOSE: "false"

  # TCP routing domain of the SCF cluster; only used for testing;
  # Example: "tcp.my-scf-cluster.com"
  TCP_DOMAIN: ~

  # Concatenation of trusted CA certificates to be made available on the cell.
  TRUSTED_CERTS: ~

  # The host name of the UAA server (root zone)
  UAA_HOST: ~

  # The tcp port the UAA server (root zone) listens on for requests.
  UAA_PORT: "2793"

  # Whether or not to use privileged containers for buildpack based
  # applications. Containers with a docker-image-based rootfs will continue to
  # always be unprivileged.
  USE_DIEGO_PRIVILEGED_CONTAINERS: "false"

  # Whether or not to use privileged containers for staging tasks.
  USE_STAGER_PRIVILEGED_CONTAINERS: "false"

# The sizing section contains configuration to change each individual instance
# group. Due to limitations on the allowable names, any dashes ("-") in the
# instance group names are replaced with underscores ("_").
sizing:
  # The adapter instance group contains the following jobs:
  #
  # - global-properties: Dummy BOSH job used to host global parameters that are
  #   required to configure SCF
  #
  # Also: adapter and bpm
  adapter:
    # Node affinity rules can be specified here
    affinity: {}

    # The adapter instance group can scale between 1 and 65535 instances.
    # For high availability it needs at least 2 instances.
    count: 1

    # Unit [millicore]
    cpu:
      request: 2000
      limit: ~

    # Unit [MiB]
    memory:
      request: 128
      limit: ~

  # The api-group instance group contains the following jobs:
  #
  # - global-properties: Dummy BOSH job used to host global parameters that are
  #   required to configure SCF
  #
  # - authorize-internal-ca: Install both internal and UAA CA certificates
  #
  # - patch-properties: Dummy BOSH job used to host parameters that are used in
  #   SCF patches for upstream bugs
  #
  # - cloud_controller_ng: The Cloud Controller provides primary Cloud Foundry
  #   API that is by the CF CLI. The Cloud Controller uses a database to keep
  #   tables for organizations, spaces, apps, services, service instances, user
  #   roles, and more. Typically multiple instances of Cloud Controller are load
  #   balanced.
  #
  # - route_registrar: Used for registering routes
  #
  # Also: bpm, statsd_injector, go-buildpack, binary-buildpack,
  # nodejs-buildpack, ruby-buildpack, php-buildpack, python-buildpack,
  # staticfile-buildpack, nginx-buildpack, java-buildpack, and
  # dotnet-core-buildpack
  api_group:
    # Node affinity rules can be specified here
    affinity: {}

    # The api_group instance group can scale between 1 and 65535 instances.
    # For high availability it needs at least 2 instances.
    count: 1

    # Unit [millicore]
    cpu:
      request: 4000
      limit: ~

    # Unit [MiB]
    memory:
      request: 3800
      limit: ~

  # The autoscaler-api instance group contains the following jobs:
  #
  # - global-properties: Dummy BOSH job used to host global parameters that are
  #   required to configure SCF
  #
  # - route_registrar: Used for registering routes
  #
  # Also: apiserver and bpm
  autoscaler_api:
    # Node affinity rules can be specified here
    affinity: {}

    # The autoscaler_api instance group can be enabled by the autoscaler
    # feature.
    # It can scale between 1 and 3 instances.
    # For high availability it needs at least 2 instances.
    count: 1

    # Unit [millicore]
    cpu:
      request: 2000
      limit: ~

    # Unit [MiB]
    memory:
      request: 256
      limit: ~

  # The autoscaler-eventgenerator instance group contains the following jobs:
  #
  # - global-properties: Dummy BOSH job used to host global parameters that are
  #   required to configure SCF
  #
  # - authorize-internal-ca: Install both internal and UAA CA certificates
  #
  # Also: eventgenerator
  autoscaler_eventgenerator:
    # Node affinity rules can be specified here
    affinity: {}

    # Additional privileges can be specified here
    capabilities: []

    # The autoscaler_eventgenerator instance group can be enabled by the
    # autoscaler feature.
    # It can scale between 1 and 3 instances.
    # For high availability it needs at least 2 instances.
    count: 1

    # Unit [millicore]
    cpu:
      request: 2000
      limit: ~

    # Unit [MiB]
    memory:
      request: 2350
      limit: ~

  # The autoscaler-metrics instance group contains the following jobs:
  #
  # - global-properties: Dummy BOSH job used to host global parameters that are
  #   required to configure SCF
  #
  # - authorize-internal-ca: Install both internal and UAA CA certificates
  #
  # Also: metricscollector
  autoscaler_metrics:
    # Node affinity rules can be specified here
    affinity: {}

    # Additional privileges can be specified here
    capabilities: []

    # The autoscaler_metrics instance group can be enabled by the autoscaler
    # feature.
    # It can scale between 1 and 3 instances.
    # For high availability it needs at least 2 instances.
    count: 1

    # Unit [millicore]
    cpu:
      request: 4000
      limit: ~

    # Unit [MiB]
    memory:
      request: 128
      limit: ~

  # The autoscaler-operator instance group contains the following jobs:
  #
  # - global-properties: Dummy BOSH job used to host global parameters that are
  #   required to configure SCF
  #
  # - authorize-internal-ca: Install both internal and UAA CA certificates
  #
  # Also: operator
  autoscaler_operator:
    # Node affinity rules can be specified here
    affinity: {}

    # Additional privileges can be specified here
    capabilities: []

    # The autoscaler_operator instance group can be enabled by the autoscaler
    # feature.
    # It can scale between 1 and 3 instances.
    # For high availability it needs at least 2 instances.
    count: 1

    # Unit [millicore]
    cpu:
      request: 2000
      limit: ~

    # Unit [MiB]
    memory:
      request: 2350
      limit: ~

  # The autoscaler-postgres instance group contains the following jobs:
  #
  # - global-properties: Dummy BOSH job used to host global parameters that are
  #   required to configure SCF
  #
  # - postgres: The Postgres server provides a single instance Postgres database
  #   that can be used with the Cloud Controller or the UAA. It does not provide
  #   highly-available configuration.
  autoscaler_postgres:
    # Node affinity rules can be specified here
    affinity: {}

    # Additional privileges can be specified here
    capabilities: []

    # The autoscaler_postgres instance group can be enabled by the autoscaler
    # feature.
    # It cannot be scaled.
    count: 1

    # Unit [millicore]
    cpu:
      request: 2000
      limit: ~

    disk_sizes:
      postgres_data: 5

    # Unit [MiB]
    memory:
      request: 1024
      limit: ~

  # The autoscaler-scalingengine instance group contains the following jobs:
  #
  # - global-properties: Dummy BOSH job used to host global parameters that are
  #   required to configure SCF
  #
  # - authorize-internal-ca: Install both internal and UAA CA certificates
  #
  # Also: scalingengine
  autoscaler_scalingengine:
    # Node affinity rules can be specified here
    affinity: {}

    # Additional privileges can be specified here
    capabilities: []

    # The autoscaler_scalingengine instance group can be enabled by the
    # autoscaler feature.
    # It can scale between 1 and 3 instances.
    # For high availability it needs at least 2 instances.
    count: 1

    # Unit [millicore]
    cpu:
      request: 2000
      limit: ~

    # Unit [MiB]
    memory:
      request: 2350
      limit: ~

  # The autoscaler-scheduler instance group contains the following jobs:
  #
  # - global-properties: Dummy BOSH job used to host global parameters that are
  #   required to configure SCF
  #
  # - authorize-internal-ca: Install both internal and UAA CA certificates
  #
  # Also: scheduler
  autoscaler_scheduler:
    # Node affinity rules can be specified here
    affinity: {}

    # Additional privileges can be specified here
    capabilities: []

    # The autoscaler_scheduler instance group can be enabled by the autoscaler
    # feature.
    # It can scale between 1 and 3 instances.
    # For high availability it needs at least 2 instances.
    count: 1

    # Unit [millicore]
    cpu:
      request: 2000
      limit: ~

    # Unit [MiB]
    memory:
      request: 2350
      limit: ~

  # The autoscaler-servicebroker instance group contains the following jobs:
  #
  # - global-properties: Dummy BOSH job used to host global parameters that are
  #   required to configure SCF
  #
  # - authorize-internal-ca: Install both internal and UAA CA certificates
  #
  # - route_registrar: Used for registering routes
  #
  # Also: servicebroker and bpm
  autoscaler_servicebroker:
    # Node affinity rules can be specified here
    affinity: {}

    # The autoscaler_servicebroker instance group can be enabled by the
    # autoscaler feature.
    # It can scale between 1 and 3 instances.
    # For high availability it needs at least 2 instances.
    count: 1

    # Unit [millicore]
    cpu:
      request: 2000
      limit: ~

    # Unit [MiB]
    memory:
      request: 2350
      limit: ~

  # The bits instance group contains the following jobs:
  #
  # - global-properties: Dummy BOSH job used to host global parameters that are
  #   required to configure SCF
  #
  # - route_registrar: Used for registering routes
  #
  # - eirinifs: This job copies the eirinifs to a desired location
  #
  # Also: statsd_injector, bpm, and bits-service
  bits:
    # Node affinity rules can be specified here
    affinity: {}

    # The bits instance group cannot be scaled.
    count: 1

    # Unit [millicore]
    cpu:
      request: 2000
      limit: ~

    # Unit [MiB]
    memory:
      request: 256
      limit: ~

  # The blobstore instance group contains the following jobs:
  #
  # - global-properties: Dummy BOSH job used to host global parameters that are
  #   required to configure SCF
  #
  # - route_registrar: Used for registering routes
  #
  # Also: blobstore and bpm
  blobstore:
    # Node affinity rules can be specified here
    affinity: {}

    # The blobstore instance group cannot be scaled.
    count: 1

    # Unit [millicore]
    cpu:
      request: 2000
      limit: ~

    disk_sizes:
      blobstore_data: 50

    # Unit [MiB]
    memory:
      request: 500
      limit: ~

  # The cc-clock instance group contains the following jobs:
  #
  # - global-properties: Dummy BOSH job used to host global parameters that are
  #   required to configure SCF
  #
  # - authorize-internal-ca: Install both internal and UAA CA certificates
  #
  # - wait-for-api: Wait for API to be ready before starting any jobs
  #
  # - cloud_controller_clock: The Cloud Controller Clock runs the Diego Sync job
  #   to keep the actual state of running processes in Diego in sync with Cloud
  #   Controller's desired state. Additionally, the Clock schedules periodic
  #   clean up jobs to prune app usage events, audit events, failed jobs, and
  #   more.
  #
  # Also: statsd_injector and bpm
  cc_clock:
    # Node affinity rules can be specified here
    affinity: {}

    # The cc_clock instance group can scale between 1 and 3 instances.
    # For high availability it needs at least 2 instances.
    count: 1

    # Unit [millicore]
    cpu:
      request: 2000
      limit: ~

    # Unit [MiB]
    memory:
      request: 750
      limit: ~

  # The cc-uploader instance group contains the following jobs:
  #
  # - global-properties: Dummy BOSH job used to host global parameters that are
  #   required to configure SCF
  #
  # - authorize-internal-ca: Install both internal and UAA CA certificates
  #
  # Also: tps, cc_uploader, and bpm
  cc_uploader:
    # Node affinity rules can be specified here
    affinity: {}

    # The cc_uploader instance group can scale between 1 and 3 instances.
    # For high availability it needs at least 2 instances.
    count: 1

    # Unit [millicore]
    cpu:
      request: 4000
      limit: ~

    # Unit [MiB]
    memory:
      request: 128
      limit: ~

  # The cc-worker instance group contains the following jobs:
  #
  # - global-properties: Dummy BOSH job used to host global parameters that are
  #   required to configure SCF
  #
  # - authorize-internal-ca: Install both internal and UAA CA certificates
  #
  # - cloud_controller_worker: Cloud Controller worker processes background
  #   tasks submitted via the.
  #
  # Also: bpm
  cc_worker:
    # Node affinity rules can be specified here
    affinity: {}

    # The cc_worker instance group can scale between 1 and 65535 instances.
    # For high availability it needs at least 2 instances.
    count: 1

    # Unit [millicore]
    cpu:
      request: 2000
      limit: ~

    # Unit [MiB]
    memory:
      request: 750
      limit: ~

  # The cf-usb-group instance group contains the following jobs:
  #
  # - global-properties: Dummy BOSH job used to host global parameters that are
  #   required to configure SCF
  #
  # - authorize-internal-ca: Install both internal and UAA CA certificates
  #
  # - route_registrar: Used for registering routes
  #
  # Also: cf-usb and bpm
  cf_usb_group:
    # Node affinity rules can be specified here
    affinity: {}

    # The cf_usb_group instance group is enabled by the cf_usb feature.
    # It can scale between 1 and 3 instances.
    # For high availability it needs at least 2 instances.
    count: 1

    # Unit [millicore]
    cpu:
      request: 2000
      limit: ~

    # Unit [MiB]
    memory:
      request: 128
      limit: ~

  # The credhub-user instance group contains the following jobs:
  #
  # - global-properties: Dummy BOSH job used to host global parameters that are
  #   required to configure SCF
  #
  # - route_registrar: Used for registering routes
  #
  # Also: credhub and bpm
  credhub_user:
    # Node affinity rules can be specified here
    affinity: {}

    # The credhub_user instance group can be enabled by the credhub feature.
    # It cannot be scaled.
    count: 1

    # Unit [millicore]
    cpu:
      request: 2000
      limit: ~

    # Unit [MiB]
    memory:
      request: 2000
      limit: ~

  # The diego-api instance group contains the following jobs:
  #
  # - global-properties: Dummy BOSH job used to host global parameters that are
  #   required to configure SCF
  #
  # - authorize-internal-ca: Install both internal and UAA CA certificates
  #
  # - patch-properties: Dummy BOSH job used to host parameters that are used in
  #   SCF patches for upstream bugs
  #
  # Also: bbs and cfdot
  diego_api:
    # Node affinity rules can be specified here
    affinity: {}

    # Additional privileges can be specified here
    capabilities: []

    # The diego_api instance group can be disabled by the eirini feature.
    # It can scale between 1 and 3 instances.
    # For high availability it needs at least 2 instances.
    count: 1

    # Unit [millicore]
    cpu:
      request: 2000
      limit: ~

    # Unit [MiB]
    memory:
      request: 128
      limit: ~

  # The diego-brain instance group contains the following jobs:
  #
  # - global-properties: Dummy BOSH job used to host global parameters that are
  #   required to configure SCF
  #
  # - authorize-internal-ca: Install both internal and UAA CA certificates
  #
  # - patch-properties: Dummy BOSH job used to host parameters that are used in
  #   SCF patches for upstream bugs
  #
  # Also: auctioneer and cfdot
  diego_brain:
    # Node affinity rules can be specified here
    affinity: {}

    # Additional privileges can be specified here
    capabilities: []

    # The diego_brain instance group can be disabled by the eirini feature.
    # It can scale between 1 and 3 instances.
    # For high availability it needs at least 2 instances.
    count: 1

    # Unit [millicore]
    cpu:
      request: 4000
      limit: ~

    # Unit [MiB]
    memory:
      request: 128
      limit: ~

  # The diego-cell instance group contains the following jobs:
  #
  # - global-properties: Dummy BOSH job used to host global parameters that are
  #   required to configure SCF
  #
  # - authorize-internal-ca: Install both internal and UAA CA certificates
  #
  # - get-kubectl: This job exists only to ensure the presence of the kubectl
  #   binary in the role referencing it.
  #
  # - wait-for-uaa: Wait for UAA to be ready before starting any jobs
  #
  # - patch-properties: Dummy BOSH job used to host parameters that are used in
  #   SCF patches for upstream bugs
  #
  # Also: rep, cfdot, route_emitter, garden, groot-btrfs,
  # cflinuxfs2-rootfs-setup, cflinuxfs3-rootfs-setup, cf-sle12-setup,
  # sle15-rootfs-setup, nfsv3driver, and mapfs
  diego_cell:
    # Node affinity rules can be specified here
    affinity: {}

    # The diego_cell instance group can be disabled by the eirini feature.
    # It can scale between 1 and 254 instances.
    # For high availability it needs at least 3 instances.
    count: 1

    # Unit [millicore]
    cpu:
      request: 4000
      limit: ~

    disk_sizes:
      grootfs_data: 50

    # Unit [MiB]
    memory:
      request: 2800
      limit: ~

  # The diego-ssh instance group contains the following jobs:
  #
  # - global-properties: Dummy BOSH job used to host global parameters that are
  #   required to configure SCF
  #
  # - authorize-internal-ca: Install both internal and UAA CA certificates
  #
  # Also: ssh_proxy and file_server
  diego_ssh:
    # Node affinity rules can be specified here
    affinity: {}

    # Additional privileges can be specified here
    capabilities: []

    # The diego_ssh instance group can be disabled by the eirini feature.
    # It can scale between 1 and 3 instances.
    # For high availability it needs at least 2 instances.
    count: 1

    # Unit [millicore]
    cpu:
      request: 2000
      limit: ~

    # Unit [MiB]
    memory:
      request: 128
      limit: ~

  # The doppler instance group contains the following jobs:
  #
  # - global-properties: Dummy BOSH job used to host global parameters that are
  #   required to configure SCF
  #
  # - authorize-internal-ca: Install both internal and UAA CA certificates
  #
  # - route_registrar: Used for registering routes
  #
  # Also: log-cache-gateway, log-cache-nozzle, log-cache-cf-auth-proxy,
  # log-cache-expvar-forwarder, log-cache, doppler, and bpm
  doppler:
    # Node affinity rules can be specified here
    affinity: {}

    # The doppler instance group can scale between 1 and 65535 instances.
    # For high availability it needs at least 2 instances.
    count: 1

    # Unit [millicore]
    cpu:
      request: 2000
      limit: ~

    # Unit [MiB]
    memory:
      request: 410
      limit: ~

  # The eirini instance group contains the following jobs:
  #
  # - global-properties: Dummy BOSH job used to host global parameters that are
  #   required to configure SCF
  #
  # - authorize-internal-ca: Install both internal and UAA CA certificates
  #
  # - patch-properties: Dummy BOSH job used to host parameters that are used in
  #   SCF patches for upstream bugs
  #
  # Also: opi
  eirini:
    # Node affinity rules can be specified here
    affinity: {}

    # Additional privileges can be specified here
    capabilities: []

    # The eirini instance group can be enabled by the eirini feature.
    # It cannot be scaled.
    count: 1

    # Unit [millicore]
    cpu:
      request: 2000
      limit: ~

    # Unit [MiB]
    memory:
      request: 256
      limit: ~

  # The locket instance group contains the following jobs:
  #
  # - global-properties: Dummy BOSH job used to host global parameters that are
  #   required to configure SCF
  #
  # - authorize-internal-ca: Install both internal and UAA CA certificates
  #
  # - patch-properties: Dummy BOSH job used to host parameters that are used in
  #   SCF patches for upstream bugs
  #
  # Also: locket
  locket:
    # Node affinity rules can be specified here
    affinity: {}

    # Additional privileges can be specified here
    capabilities: []

    # The locket instance group can scale between 1 and 3 instances.
    # For high availability it needs at least 2 instances.
    count: 1

    # Unit [millicore]
    cpu:
      request: 2000
      limit: ~

    # Unit [MiB]
    memory:
      request: 128
      limit: ~

  # The log-api instance group contains the following jobs:
  #
  # - global-properties: Dummy BOSH job used to host global parameters that are
  #   required to configure SCF
  #
  # - authorize-internal-ca: Install both internal and UAA CA certificates
  #
  # - route_registrar: Used for registering routes
  #
  # Also: loggregator_trafficcontroller, reverse_log_proxy, and bpm
  log_api:
    # Node affinity rules can be specified here
    affinity: {}

    # The log_api instance group can scale between 1 and 65535 instances.
    # For high availability it needs at least 2 instances.
    count: 1

    # Unit [millicore]
    cpu:
      request: 2000
      limit: ~

    # Unit [MiB]
    memory:
      request: 128
      limit: ~

  # The log-cache-scheduler instance group contains the following jobs:
  #
  # - global-properties: Dummy BOSH job used to host global parameters that are
  #   required to configure SCF
  #
  # - authorize-internal-ca: Install both internal and UAA CA certificates
  #
  # - log-cache-scheduler-properties: Dummy BOSH job used to host parameters
  #   that are used in SCF patches
  #
  # Also: log-cache-scheduler, log-cache-expvar-forwarder, and bpm
  log_cache_scheduler:
    # Node affinity rules can be specified here
    affinity: {}

    # The log_cache_scheduler instance group can scale between 1 and 65535
    # instances.
    # For high availability it needs at least 2 instances.
    count: 1

    # Unit [millicore]
    cpu:
      request: 2000
      limit: ~

    # Unit [MiB]
    memory:
      request: 410
      limit: ~

  # The loggregator-agent instance group contains the following jobs:
  #
  # - global-properties: Dummy BOSH job used to host global parameters that are
  #   required to configure SCF
  #
  # Also: loggr-expvar-forwarder, loggregator_agent, and bpm
  loggregator_agent:
    # Node affinity rules can be specified here
    affinity: {}

    # The loggregator_agent instance group can scale between 1 and 3 instances.
    # For high availability it needs at least 2 instances.
    count: 1

    # Unit [millicore]
    cpu:
      request: ~
      limit: ~

    # Unit [MiB]
    memory:
      request: ~
      limit: ~

  # The mysql instance group contains the following jobs:
  #
  # - global-properties: Dummy BOSH job used to host global parameters that are
  #   required to configure SCF
  #
  # - patch-properties: Dummy BOSH job used to host parameters that are used in
  #   SCF patches for upstream bugs
  #
  # Also: mysql and proxy
  mysql:
    # Node affinity rules can be specified here
    affinity: {}

    # Additional privileges can be specified here
    capabilities: []

    # The mysql instance group can scale between 1 and 3 instances.
    # For high availability it needs at least 2 instances.
    count: 1

    # Unit [millicore]
    cpu:
      request: 2000
      limit: ~

    disk_sizes:
      mysql_data: 20

    # Unit [MiB]
    memory:
      request: 2500
      limit: ~

  # The nats instance group contains the following jobs:
  #
  # - global-properties: Dummy BOSH job used to host global parameters that are
  #   required to configure SCF
  #
  # - nats: The NATS server provides publish-subscribe messaging system for the
  #   Cloud Controller, the DEA , HM9000, and other Cloud Foundry components.
  #
  # Also: bpm
  nats:
    # Node affinity rules can be specified here
    affinity: {}

    # The nats instance group can scale between 1 and 3 instances.
    # For high availability it needs at least 2 instances.
    count: 1

    # Unit [millicore]
    cpu:
      request: 2000
      limit: ~

    # Unit [MiB]
    memory:
      request: 128
      limit: ~

  # The nfs-broker instance group contains the following jobs:
  #
  # - global-properties: Dummy BOSH job used to host global parameters that are
  #   required to configure SCF
  #
  # - authorize-internal-ca: Install both internal and UAA CA certificates
  #
  # Also: nfsbroker
  nfs_broker:
    # Node affinity rules can be specified here
    affinity: {}

    # The nfs_broker instance group can scale between 1 and 3 instances.
    # For high availability it needs at least 2 instances.
    count: 1

    # Unit [millicore]
    cpu:
      request: 2000
      limit: ~

    # Unit [MiB]
    memory:
      request: 128
      limit: ~

  # The post-deployment-setup instance group contains the following jobs:
  #
  # - global-properties: Dummy BOSH job used to host global parameters that are
  #   required to configure SCF
  #
  # - authorize-internal-ca: Install both internal and UAA CA certificates
  #
  # - uaa-create-user: Create the initial user in UAA
  #
  # - configure-scf: Uses the cf CLI to configure SCF after it's online (things
  #   like proxy settings, service brokers, etc.)
  post_deployment_setup:
    # Node affinity rules can be specified here
    affinity: {}

    # Additional privileges can be specified here
    capabilities: []

    # The post_deployment_setup instance group cannot be scaled.
    count: 1

    # Unit [millicore]
    cpu:
      request: 1000
      limit: ~

    # Unit [MiB]
    memory:
      request: 256
      limit: ~

  # The router instance group contains the following jobs:
  #
  # - global-properties: Dummy BOSH job used to host global parameters that are
  #   required to configure SCF
  #
  # - authorize-internal-ca: Install both internal and UAA CA certificates
  #
  # - gorouter: Gorouter maintains a dynamic routing table based on updates
  #   received from NATS and (when enabled) the Routing API. This routing table
  #   maps URLs to back-ends. The router finds the URL in the routing table that
  #   most closely matches the host header of the request and load balances
  #   across the associated back-ends.
  #
  # Also: bpm
  router:
    # Node affinity rules can be specified here
    affinity: {}

    # The router instance group can scale between 1 and 65535 instances.
    # For high availability it needs at least 2 instances.
    count: 1

    # Unit [millicore]
    cpu:
      request: 4000
      limit: ~

    # Unit [MiB]
    memory:
      request: 128
      limit: ~

  # The routing-api instance group contains the following jobs:
  #
  # - global-properties: Dummy BOSH job used to host global parameters that are
  #   required to configure SCF
  #
  # - authorize-internal-ca: Install both internal and UAA CA certificates
  #
  # Also: bpm and routing-api
  routing_api:
    # Node affinity rules can be specified here
    affinity: {}

    # The routing_api instance group can scale between 1 and 3 instances.
    # For high availability it needs at least 2 instances.
    count: 1

    # Unit [millicore]
    cpu:
      request: 4000
      limit: ~

    # Unit [MiB]
    memory:
      request: 128
      limit: ~

  # The secret-generation instance group contains the following jobs:
  #
  # - generate-secrets: This job will generate the secrets for the cluster
  secret_generation:
    # Node affinity rules can be specified here
    affinity: {}

    # Additional privileges can be specified here
    capabilities: []

    # The secret_generation instance group cannot be scaled.
    count: 1

    # Unit [millicore]
    cpu:
      request: 1000
      limit: ~

    # Unit [MiB]
    memory:
      request: 256
      limit: ~

  # The syslog-scheduler instance group contains the following jobs:
  #
  # - global-properties: Dummy BOSH job used to host global parameters that are
  #   required to configure SCF
  #
  # Also: scheduler and bpm
  syslog_scheduler:
    # Node affinity rules can be specified here
    affinity: {}

    # The syslog_scheduler instance group can scale between 1 and 3 instances.
    # For high availability it needs at least 2 instances.
    count: 1

    # Unit [millicore]
    cpu:
      request: 2000
      limit: ~

    # Unit [MiB]
    memory:
      request: 128
      limit: ~

  # The tcp-router instance group contains the following jobs:
  #
  # - global-properties: Dummy BOSH job used to host global parameters that are
  #   required to configure SCF
  #
  # - authorize-internal-ca: Install both internal and UAA CA certificates
  #
  # - wait-for-uaa: Wait for UAA to be ready before starting any jobs
  #
  # Also: tcp_router and bpm
  tcp_router:
    # Node affinity rules can be specified here
    affinity: {}

    # The tcp_router instance group can scale between 1 and 3 instances.
    # For high availability it needs at least 2 instances.
    count: 1

    # Unit [millicore]
    cpu:
      request: 2000
      limit: ~

    # Unit [MiB]
    memory:
      request: 128
      limit: ~

    ports:
      tcp_route:
        count: 9

enable:
  # The autoscaler feature enables these instance groups: autoscaler_postgres,
  # autoscaler_api, autoscaler_metrics, autoscaler_scalingengine,
  # autoscaler_scheduler, autoscaler_operator, autoscaler_servicebroker, and
  # autoscaler_eventgenerator
  autoscaler: false

  # The cf_usb feature enables these instance groups: cf_usb_group
  cf_usb: true

  # The credhub feature enables these instance groups: credhub_user
  credhub: false

  # The eirini feature enables these instance groups: eirini
  # It disables these instance groups: diego_api, diego_brain, diego_ssh, and
  # diego_cell
  eirini: false

ingress:
  # ingress.annotations allows specifying custom ingress annotations that gets
  # merged to the default annotations.
  annotations: {}

  # ingress.enabled enables ingress support - working ingress controller
  # necessary.
  enabled: false

  # ingress.tls.crt and ingress.tls.key, when specified, are used by the TLS
  # secret for the Ingress resource.
  tls: {}


</screen>
</sect1>
