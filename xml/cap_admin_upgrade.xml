<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter version="5.0" xml:id="cha-cap-upgrade"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink">
 <info>
  <title>Upgrading &productname;</title>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <para>
	 <!-- TODO-CAP2 -->
  <literal>scf</literal> and Stratos together make up
  a &productname; release. Maintenance updates are delivered as container
  images from the &suse; registry and applied with &helm;.
 </para>
 <para>
   For additional upgrade information, always review the release notes
   published at
   <link xlink:href="https://www.suse.com/releasenotes/x86_64/SUSE-CAP/1/"/>.
 </para>
 <sect1 xml:id="sec-cap-upgrade-considerations">
  <title>Important Considerations</title>

  <para>
   Before performing an upgrade, be sure to take note of the following:
  </para>


  <variablelist>
   <varlistentry>
    <term>Perform Upgrades in Sequence</term>
    <listitem>
     <para>
      &cap; only supports upgrading releases in sequential order. If there are
      any intermediate releases between your current release and your target
      release, they must be installed. Skipping
      releases is not supported. See <xref linkend="sec-cap-skipped-release"/>
      for more information.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Preserve &helm; Value Changes during Upgrades</term>
    <listitem>
     <para>
      During a <command>helm upgrade</command>, always ensure your
      <filename>scf-config-values-yaml</filename> file is passed. This will
      preserve any previously set &helm; values while allowing additional
      &helm; value changes to be made.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>helm rollback</command> Is Not Supported</term>
    <listitem>
     <para>
      <command>helm rollback</command> is not supported in &productname; or in
      upstream &cf;, and may break your cluster completely, because database
      migrations only run forward and cannot be reversed. Database schema can
      change over time. During upgrades both pods of the current and the next
      release may run concurrently, so the schema must stay compatible with the
      immediately previous release. But there is no way to guarantee such
      compatibility for future upgrades. One way to address this is to perform a
      full raw data backup and restore. (See
      <xref linkend="sec-cap-backup-restore-of-raw-data"/>)
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>

 <sect1 xml:id="sec-cap-update">
  <title>Upgrading &productname;</title>

  <para>
   The supported upgrade method is to install all upgrades, in order. Skipping
   releases is not supported. This table matches the Helm chart versions to
   each release:
  </para>

  &releases-table;

  <para>
   Use <command>helm list</command> to see the version of your installed release
   . Verify the latest release is the next sequential release from your
   installed release. If it is, proceed with the commands below to perform the
   upgrade. If any releases have been missed, see
   <xref linkend="sec-cap-skipped-release"/>.
  </para>

 </sect1>
 <sect1 xml:id="sec-cap-skipped-release">
  <title>Installing Skipped Releases</title>

  <!-- TODO-CAP2 -->

  <para>
   By default, &helm; always installs the latest release. What if you
   accidentally skipped a release, and need to apply it before upgrading to the
   current release? Install the missing release by specifying the &helm; chart
   version number. For example, your current <literal>uaa</literal> and
   <literal>scf</literal> versions are 2.10.1. Consult the table at the
   beginning of this chapter to see which releases you have missed. In this
   example, the missing &helm; chart version for <literal>uaa</literal> and
   <literal>scf</literal> is 2.11.0. Use the <command>--version</command>
   option to install a specific version:
  </para>

<screen>&prompt.user;helm upgrade <replaceable>susecf-uaa</replaceable> suse/uaa \
--values scf-config-values.yaml \
--version 2.11.0 
</screen>
 </sect1>
</chapter>
