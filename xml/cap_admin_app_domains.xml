<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter version="5.0" xml:id="cha-cap-custom-app-domains"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink">
 <info>
<!-- TODO review if chapter is still required. See:
  https://github.com/SUSE/doc-cap/issues/283
  -->
  <title>Custom Application Domains</title>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <para>
  In a standard &kubecf; deployment, applications will use the same domain as the
  one configured in your &values-filename; for &kubecf;.
  For example, if <literal>DOMAIN</literal> is set as
  <replaceable>EXAMPLE.COM</replaceable> in your
  &values-filename; and you deploy an application
  called <replaceable>MY_APP</replaceable> then the application's URL will be
  <literal>MY_APP.EXAMPLE.COM</literal>.
 </para>
 <para>
  This chapter describes the changes required to allow applications to use a
  separate domain.
 </para>
 <sect1 xml:id="sec-cap-customizing-app-domains">
  <title>Customizing Application Domains</title>

  <para>
   Begin by adding the following to your &values-filename;. Replace
   <replaceable>MY_APP_DOMAIN.COM</replaceable> with the domain to use with your
   applications:
  </para>

<screen>bosh:
  instance_groups:
  - name: api-group
    jobs:
    - name: cloud_controller_ng
      properties:
        app_domains:
	- <replaceable>MY_APP_DOMAIN.COM</replaceable>
</screen>

  <para>
   If this is an initial deployment, use <command>helm install</command> to
   deploy <literal>kubecf</literal>:
  </para>
<screen>&prompt.user;kubectl create namespace <replaceable>kubecf</replaceable>

&prompt.user;helm install <replaceable>kubecf</replaceable> suse/kubecf \
--namespace <replaceable>kubecf</replaceable> \
--values &values-file;
</screen>

  <para>
   If this is an existing deployment, use <command>helm upgrade</command> to
   apply the change:
  </para>
<screen>&prompt.user;helm upgrade <replaceable>kubecf</replaceable> suse/kubecf \
--namespace <replaceable>kubecf</replaceable> \
--values &values-file; \
--version &kubecf_chart;
</screen>

  &kubecf-deploy-complete;

  <para>
   When the <literal>kubecf</literal> is complete, do the following to confirm
   custom application domains have been configured correctly.
  </para>

  <para>
   Run <command>cf curl /v2/info</command> and verify the &kubecf; domain is not
   <replaceable>MY_APP_DOMAIN.COM</replaceable>:
  </para>

<screen>&prompt.user;cf api --skip-ssl-validation https://api.EXAMPLE.COM
&prompt.user;cf curl /v2/info | grep endpoint
</screen>

  <para>
   Deploy an application and examine the <literal>routes</literal> field to
   verify <replaceable>MY_APP_DOMAIN.COM</replaceable> is being used:
  </para>

<screen>&prompt.user;cf login
&prompt.user;cf create-org <replaceable>MY_ORG</replaceable>
&prompt.user;cf create-space <replaceable>MY_SPACE</replaceable> -o<replaceable>MY_ORG</replaceable>
&prompt.user;cf target -o <replaceable>MY_ORG</replaceable> -s<replaceable>MY_SPACE</replaceable>
&prompt.user;cf push <replaceable>MY_APP</replaceable>
cf push <replaceable>MY_APP</replaceable>
Pushing app <replaceable>MY_APP</replaceable> to org<replaceable>MY_ORG</replaceable> / space <replaceable>MY_SPACE</replaceable> as <replaceable>admin</replaceable>...
Getting app info...
Creating app with these attributes...
  name:       <replaceable>MY_APP</replaceable>
  path:       <replaceable>/path/to/MY_APP</replaceable>
  routes:
+   <replaceable>MY_APP.MY_APP_DOMAIN.COM</replaceable>

Creating app <replaceable>MY_APP...</replaceable>
Mapping routes...

...

Waiting for app to start...

name:              <replaceable>MY_APP</replaceable>
requested state:   started
instances:         1/1
usage:             1G x 1 instances
routes:            <replaceable>MY_APP.MY_APP_DOMAIN.COM</replaceable>
last uploaded:     Mon 14 Jan 11:08:02 PST 2019
stack:             sle15
buildpack:         ruby
start command:     bundle exec rackup config.ru -p $PORT

     state     since                  cpu    memory       disk          details
#0   running   2019-01-14T19:09:42Z   0.0%   2.7M of 1G   80.6M of 1G
</screen>
 </sect1>
</chapter>
