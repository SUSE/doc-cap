<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter version="5.0" xml:id="cha-cap-ccdb-secret-rotation"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink">
 <info>
  <title>Cloud Controller Database Secret Rotation</title>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <para>
  The Cloud Controller Database (CCDB) encrypts sensitive information like
  passwords. The encryption key is generated when &kubecf; is deployed.
  If it is compromised and needs to be rotated, new keys can be
  added. Note that existing encrypted information will not be updated. The
  encrypted information must be set again to have them re-encrypted with the
  new key. The old key cannot be dropped until all references to it are removed
  from the database.
 </para>
 <para>
  Updating these secrets is a manual process. The following procedure outlines
  how this is done.
 </para>
 <procedure>
  <step>
   <para>
    For each label under <literal>key_labels</literal>, &kubecf; will generate
    an encryption key. The <literal>current_key_label</literal> indicates which
    key is currently being used.
   </para>
<screen>
ccdb:
  encryption:
    rotation:
      key_labels:
      - encryption_key_0
      current_key_label: encryption_key_0
   </screen>
  </step>
  <step>
   <para>
    In order to rotate the CCDB encryption key, add a new label to
    <literal>key_labels</literal> (keeping the old labels), and mark
    the <literal>current_key_label</literal> with the newly added label:
   </para>
<screen>
ccdb:
  encryption:
    rotation:
      key_labels:
      - encryption_key_0
      - encryption_key_1
      current_key_label: encryption_key_1
   </screen>
  </step>
  <step>
   <para>
    Perform the rotation:
   </para>
   <substeps>
    <step>
     <para>
      Update the &kubecf; &helm; installation:
     </para>
<screen>
&prompt.user;helm upgrade kubecf
     </screen>
    </step>
    <step>
     <para>
      After &helm; finishes its updates, trigger the
      <literal>rotate-cc-database-key</literal> errand:
     </para>
<screen>&prompt.user;kubectl patch qjob kubecf-rotate-cc-database-key \
--namespace kubecf \
--type merge \
--patch '{"spec":{"trigger":{"strategy":"now"}}}'
     </screen>
    </step>
   </substeps>
  </step>
 </procedure>
 <sect1 xml:id="sec-cap-ccdb-tables">
  <title>Tables with Encrypted Information</title>

  <para>
   The CCDB contains several tables with encrypted information as follows:
  </para>

  <variablelist>
   <varlistentry>
    <term>apps</term>
    <listitem>
     <para>
      Environment variables
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>buildpack_lifecycle_buildpacks</term>
    <listitem>
     <para>
      Buildpack URLs may contain passwords
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>buildpack_lifecycle_data</term>
    <listitem>
     <para>
      Buildpack URLs may contain passwords
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>droplets</term>
    <listitem>
     <para>
      May contain &docker; registry passwords
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>env_groups</term>
    <listitem>
     <para>
      Environment variables
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>packages</term>
    <listitem>
     <para>
      May contain &docker; registry passwords
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>service_bindings</term>
    <listitem>
     <para>
      Contains service credentials
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>service_brokers</term>
    <listitem>
     <para>
      Contains service credentials
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>service_instances</term>
    <listitem>
     <para>
      Contains service credentials
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>service_keys</term>
    <listitem>
     <para>
      Contains service credentials
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>tasks</term>
    <listitem>
     <para>
      Environment variables
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <sect2 xml:id="sec-cap-ccdb-update-existing-table-data">
   <title>Update Existing Data with New Encryption Key</title>
   <para>
    To ensure the encryption key is updated for existing data, the command (or
    its <command>update-</command> equivalent) can be run again with the same
    parameters. Some commands need to be deleted/recreated to update the label.
   </para>
   <variablelist>
    <varlistentry>
     <term>apps</term>
     <listitem>
      <para>
       Run <command>cf set-env</command> again
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>buildpack_lifecycle_buildpacks, buildpack_lifecycle_data, droplets</term>
     <listitem>
      <para>
       <command>cf restage</command> the app
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>packages</term>
     <listitem>
      <para>
       <command>cf delete</command>, then <command>cf push</command> the app
       (&docker; apps with registry password)
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>env_groups</term>
     <listitem>
      <para>
       Run <command>cf set-staging-environment-variable-group</command> or
       <command>cf set-running-environment-variable-group</command> again
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>service_bindings</term>
     <listitem>
      <para>
       Run <command>cf unbind-service</command> and <command>cf
       bind-service</command> again
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>service_brokers</term>
     <listitem>
      <para>
       Run <command>cf update-service-broker</command> with the appropriate
       credentials
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>service_instances</term>
     <listitem>
      <para>
       Run <command>cf update-service</command> with the appropriate
       credentials
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>service_keys</term>
     <listitem>
      <para>
       Run <command>cf delete-service-key</command> and <command>cf
       create-service-key</command> again
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>tasks</term>
     <listitem>
      <para>
       While tasks have an encryption key label, they are generally meant to be
       a one-off event, and left to run to completion. If there is a task still
       running, it could be stopped with <command>cf terminate-task</command>,
       then run again with <command>cf run-task</command>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>
 </sect1>
</chapter>
