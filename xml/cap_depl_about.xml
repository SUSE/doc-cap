<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter version="5.0" xml:id="cha.cap.about"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink">
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
  <title>About &productname;</title>
 </info>
 <sect1 xml:id="sec.cap.changes">
  <title>New in Version &productnumber;</title>

  <para>
   See the
   <link xlink:href="https://www.suse.com/documentation/cloud-application-platform-1/index.html">Release
   Notes</link> for a list of changes, upgrade instructions, and known issues.
  </para>

  <note>
   <para>
    Reviewing the Release Notes should be a priority, and will prevent a lot of
    frustration.
   </para>
  </note>
 </sect1>
 <sect1 xml:id="sec.cap.overview">
  <title>&productname; Overview</title>

  <para>
   &productname; is a software platform for cloud-native application deployment
   based on &scf; and &kube;. It serves different but complementary purposes
   for operators and application developers.
  </para>

  <para>
   For operators, the platform is:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     Easy to install, manage, and maintain
    </para>
   </listitem>
   <listitem>
    <para>
     Secure by design
    </para>
   </listitem>
   <listitem>
    <para>
     Fault tolerant and self-healing
    </para>
   </listitem>
   <listitem>
    <para>
     Offers high availability for critical components
    </para>
   </listitem>
   <listitem>
    <para>
     Uses industry-standard components
    </para>
   </listitem>
   <listitem>
    <para>
     Avoids single vendor lock-in
    </para>
   </listitem>
  </itemizedlist>

  <para>
   For developers, the platform:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     Allocates computing resources on demand via API or Web interface
    </para>
   </listitem>
   <listitem>
    <para>
     Offers users a choice of language and Web framework
    </para>
   </listitem>
   <listitem>
    <para>
     Gives access to databases and other data services
    </para>
   </listitem>
   <listitem>
    <para>
     Emits and aggregates application log streams
    </para>
   </listitem>
   <listitem>
    <para>
     Tracks resource usage for users and groups
    </para>
   </listitem>
   <listitem>
    <para>
     Makes the software development workflow more efficient
    </para>
   </listitem>
  </itemizedlist>

  <para>
   The principle interface and API for deploying applications to &productname;
   is &scf;. Most Cloud Foundry distributions run on virtual machines managed
   by &bosh;. &scf; runs in SUSE Linux Enterprise containers managed by &kube;.
   Containerizing the components of the platform itself has these advantages:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     Improves fault tolerance. &kube; monitors the health of all containers,
     and automatically restarts faulty containers faster than virtual machines
     can be restarted or replaced.
    </para>
   </listitem>
   <listitem>
    <para>
     Reduces physical memory overhead. &scf; components deployed in containers
     consume substantially less memory, as host-level operations are shared
     between containers by &kube;.
    </para>
   </listitem>
  </itemizedlist>

  <para>
   &scf; packages upstream Cloud Foundry &bosh; releases to produce containers
   and configurations which are deployed to &kube; clusters using &helm;.
  </para>
 </sect1>
 <sect1 xml:id="sec.cap.architecture">
  <title>&productname; Architecture</title>

  <para>
   This guide details the steps for deploying &scf; on &suse; &caasp;, and on
   supported &kube; environments such as Microsoft Azure Kubernetes Service
   (AKS), and Amazon Elastic Container Service for Kubernetes (EKS).
  </para>

  <important>
   <title>Required Knowledge</title>
   <para>
    Installing and administering &productname; requires knowledge of Linux,
    &docker;, &kube;, and your &kube; platform (e.g. &suse; &caasp;, AKS, EKS,
    OpenStack). You must plan resource allocation and network architecture by
    taking into account the requirements of your &kube; platform in addition to
    &cap; requirements. &cap; is a discrete component in your cloud stack, but
    it still requires knowledge of administering and troubleshooting the
    underlying stack.
   </para>
  </important>

  <para>
   &suse; &caasp; is a specialized application development and hosting platform
   built on the &susemicros; container host operating system, container
   orchestration with &kube;, and &salt; for automating installation and
   configuration.
  </para>

  <para>
   A supported deployment includes &scf; installed on &caasp;, Amazon EKS, or
   Azure AKS. You also need a storage backend, such as &ses;, a DNS/DHCP
   server, and an Internet connection to download additional packages during
   installation and ~10GB of Docker images on each &kube; worker after
   installation.
  </para>

  <para>
   A production deployment requires considerable resources. &productname;
   includes an entitlement of &suse; &caasp; and &ses;. &ses; alone has
   substantial requirements; see the
   <link xlink:href="https://www.suse.com/products/suse-enterprise-storage/">Tech
   Specs</link> for details. &suse; &caasp; requires a minimum of four hosts:
   one admin and three &kube; nodes. &scf; is then deployed on the &kube;
   nodes. Four &caasp; nodes are not sufficient for a production deployment.
   <xref linkend="fig.cap.min-prod-arch"/> describes a minimal production
   deployment with &scf; deployed on a &kube; cluster containing three &kube;
   masters and three workers, plus an ingress controller, administration
   workstation, DNS/DHCP server, and a &ses; cluster.
  </para>

  <figure xml:id="fig.cap.min-prod-arch">
   <title>Minimal Example Production Deployment</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="cap-arch-prod.png" format="PNG" width="90%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="cap-arch-prod.png"/>
    </imageobject>
    <textobject role="description"><phrase>network architecture of minimal production setup</phrase>
    </textobject>
   </mediaobject>
  </figure>

  <para>
   The minimum 4-node deployment is sufficient for a compact test deployment,
   which you can run virtualized on a single workstation or laptop.
   <xref linkend="cha.cap.install-production"/> details a basic production
   deployment, and <xref linkend="cha.cap.install-minimal"/> describes a
   minimal test deployment.
  </para>

  <para>
   Note that after you have deployed your cluster and start building and
   running applications, your applications may depend on buildpacks that are
   not bundled in the container images that ship with &scf;. These will be
   downloaded at runtime, when you are pushing applications to the platform.
   Some of these buildpacks may include components with proprietary licenses.
   (See
   <link xlink:href="https://docs.cloudfoundry.org/buildpacks/developing-buildpacks.html">Customizing
   and Developing Buildpacks</link> to learn more about buildpacks, and
   creating and managing your own.)
  </para>

  <para>
   The following figures illustrate the main components of &productname;.
   <xref linkend="fig.cap.cloud-101"/> shows a comparison of the basic cloud
   platforms:
   </para>
   
   <itemizedlist>
       <listitem>
           <para>
               Infrastructure as a Service (IaaS)
           </para>
        </listitem>
        <listitem>
            <para>
               Container as a Service (CaaS) 
           </para>
       </listitem>
       <listitem>
           <para>
               Platform as a Service (Paas)
           </para>
       </listitem>
       <listitem>
           <para>
             Software as a Service (SaaS)
         </para>
     </listitem>
 </itemizedlist>
 
 <para>
   &suse; &caasp; is a Container as a Service platform, and &productname; is
   a PaaS.
  </para>

  <figure xml:id="fig.cap.cloud-101">
   <title>Cloud Platform Comparisons</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="cloud-101.png" format="PNG" width="75%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="cloud-101.png"/>
    </imageobject>
    <textobject role="description"><phrase>Comparison of cloud platforms.</phrase>
    </textobject>
   </mediaobject>
  </figure>

  <para>
   <xref linkend="fig.cap.containerized"/> illustrates how &suse; &caasp; and
   &productname; containerize the platform itself.
  </para>

  <figure xml:id="fig.cap.containerized">
   <title>Containerized Platforms</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="cap-containerized.png" format="PNG" width="75%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="cap-containerized.png"/>
    </imageobject>
    <textobject role="description"><phrase>&suse; &caasp; and &productname; containerize the
      platform itself.</phrase>
    </textobject>
   </mediaobject>
  </figure>

  <para>
   <xref linkend="fig.cap.components"/> shows the relationships of the major
   &productname; components. &cap; runs on &kube;, which in turn runs on
   multiple platforms, from bare metal to various cloud stacks. Your
   applications run on &cap; and provide services.
  </para>

  <figure xml:id="fig.cap.components">
   <title>Main &productname; Components</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="cap-kube.png" format="PNG" width="75%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="cap-kube.png"/>
    </imageobject>
    <textobject role="description"><phrase>Relationships of the main &cap;
            components.</phrase>
    </textobject>
   </mediaobject>
  </figure>

  <para>
   <xref linkend="fig.cap.internal-servces"/> provides a look at &cap;'s
   internal services and their functions.
  </para>

  <figure xml:id="fig.cap.internal-servces">
   <title>&productname; Internal Services</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="cap-services.png" format="PNG" width="75%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="cap-services.png"/>
    </imageobject>
    <textobject role="description"><phrase>&cap;'s internal services and their
            functions.</phrase>
    </textobject>
   </mediaobject>
  </figure>
 </sect1>
</chapter>
