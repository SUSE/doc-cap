<!--...........................................................................
This file contains entities for repeated content entities, for re-printing 
content in multiple locations rather than using xrefs, so that users do not have 
to skip around so much. This works just like copy-paste, so be mindful of 
sections, titles, and paragraphs

Use xmlns="http://docbook.org/ns/docbook" on the first occurrence of every
parent formatting tag in each entity, to avoid "Namespace default prefix was not 
found" errors
............................................................................-->


<!--ENTITY completed-pods...................................................-->

<!ENTITY completed-pods 
'<variablelist xmlns="http://docbook.org/ns/docbook">
<varlistentry>
     <term>Some pods show not running</term>
     <listitem>
      <para>
       Some <literal>uaa</literal> and <literal>scf</literal> pods perform only 
       deployment tasks, and it is normal for them to show as unready and 
       <literal>Completed</literal> after they have completed their tasks, as 
       these examples show: 
      </para>
<screen>
&prompt.user;kubectl get pods --namespace uaa
secret-generation-1-z4nlz   0/1       Completed

&prompt.user;kubectl get pods --namespace scf
secret-generation-1-m6k2h       0/1       Completed
post-deployment-setup-1-hnpln   0/1       Completed</screen>      
     </listitem>
    </varlistentry>
</variablelist>'>

<!--ENTITY namespace-length ................................................-->

<!ENTITY namespace-length 
'<variablelist xmlns="http://docbook.org/ns/docbook">
<varlistentry>
     <term>Length of release names</term>
     <listitem>
      <para>
       Release names (for example, when you run <command>helm install --name</command>) 
have a maximum length of 36 characters.
      </para>
     </listitem>
    </varlistentry>
</variablelist>'>

<!--ENTITY fresh-namespace..................................................-->

<!ENTITY fresh-namespace
'<variablelist xmlns="http://docbook.org/ns/docbook">
<varlistentry>
     <term>Always install to a fresh namespace</term>
     <listitem>
      <para>
    If you are not creating a fresh &productname; installation, but have deleted 
    a previous deployment and are starting over, you must create new namespaces. 
    Do not re-use your old namespaces. The <command>helm delete</command> command 
    does not remove generated secrets from the <literal>scf</literal> and 
    <literal>uaa</literal> namespaces as it is 
    not aware of them. These leftover secrets may cause deployment failures. See 
    <xref linkend="sec.cap.rebuild.depl"/> for more information.
      </para>
     </listitem>
    </varlistentry>
</variablelist>'>    

<!--ENTITY readmefirst......................................................-->

<!ENTITY readmefirst
'<variablelist xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
<varlistentry>
     <term>README first!</term>
     <listitem>
      <para>
Before you start deploying &productname;, review the following documents:
      </para>
              <para>
         Read the Release Notes:
         <link xlink:href="https://www.suse.com/releasenotes/x86_64/SUSE-CAP/1/">
           Release Notes SUSE Cloud Application Platform</link>
        </para>
                <para>
            Read
         <xref linkend="cha.cap.depl.notes"/>
        </para>
     </listitem>
     </varlistentry>
     </variablelist>'>
     
<!--ENTITY dns-tables.......................................................-->

<!ENTITY dns-tables
'<informaltable xmlns="http://docbook.org/ns/docbook">
   <tgroup cols="2">
    <thead>
     <row>
      <entry>Domains</entry>
      <entry>Services</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>uaa.example.com</entry>
      <entry>uaa-uaa-public</entry>
     </row>
     <row>
      <entry>*.uaa.example.com</entry>
      <entry>uaa-uaa-public</entry>
     </row>
     <row>
      <entry>example.com</entry>
      <entry>router-gorouter-public</entry>
     </row>
     <row>
      <entry>*.example.com</entry>
      <entry>router-gorouter-public</entry>
     </row>
     <row>
      <entry>tcp.example.com</entry>
      <entry>tcp-router-tcp-router-public</entry>
     </row>
     <row>
      <entry>ssh.example.com</entry>
      <entry>diego-ssh-ssh-proxy-public</entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>

  <para xmlns="http://docbook.org/ns/docbook">
   A &productname; cluster exposes these four services:
  </para>

  <informaltable xmlns="http://docbook.org/ns/docbook">
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&kube; service descriptions</entry>
      <entry>&kube; service names</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>User Account and Authentication (<literal>uaa</literal>)</entry>
      <entry>uaa-uaa-public</entry>
     </row>
     <row>
      <entry>Cloud Foundry (CF) TCP routing service</entry>
      <entry>tcp-router-tcp-router-public</entry>
     </row>
     <row>
      <entry>CF application SSH access</entry>
      <entry>diego-ssh-ssh-proxy-public</entry>
     </row>
     <row>
      <entry>CF router</entry>
      <entry>router-gorouter-public</entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
  
  <para xmlns="http://docbook.org/ns/docbook">
   <literal>uaa-uaa-public</literal> is in the <literal>uaa</literal>
   namespace, and the rest are in the <literal>scf</literal> namespace.
  </para>'>

<!--ENTITY releases-table...................................................-->

<!ENTITY releases-table    
'<!-- TODO remember to keep this table updated -->
    <informaltable xmlns="http://docbook.org/ns/docbook">
   <tgroup cols="3">
    <thead>
     <row>
      <entry>CAP Release</entry>
      <entry>SCF and UAA &helm; Chart Version</entry>
      <entry>Stratos &helm; Chart Version</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>1.4 (current release)</entry>
      <entry>&latestuaachart;</entry>
      <entry>2.3.0</entry>
     </row>
     <row>
      <entry>1.3.1</entry>
      <entry>2.15.2</entry>
      <entry>2.3.0</entry>
     </row>
     <row>
      <entry>1.3</entry>
      <entry>2.14.5</entry>
      <entry>2.2.0</entry>
     </row>
     <row>
      <entry>1.2.1</entry>
      <entry>2.13.3</entry>
      <entry>2.1.0</entry>
     </row>
     <row>
      <entry>1.2.0</entry>
      <entry>2.11.0</entry>
      <entry>2.0.0</entry>
     </row>
     <row>
      <entry>1.1.1</entry>
      <entry>2.10.1</entry>
      <entry>1.1.0</entry>
     </row>
     <row>
      <entry>1.1.0</entry>
      <entry>2.8.0</entry>
      <entry>1.1.0</entry>
     </row>
     <row>
      <entry>1.0.1</entry>
      <entry>2.7.0</entry>
      <entry>1.0.2</entry>
     </row>
     <row>
      <entry>1.0</entry>
      <entry>2.6.11</entry>
      <entry>1.0.0</entry>
     </row>
    </tbody>
   </tgroup>
   </informaltable>'> 
   
<!--ENTITY recreate-pods...................................................-->   

<!ENTITY recreate-pods
'<variablelist xmlns="http://docbook.org/ns/docbook">
<varlistentry>
     <term>Using <command>--recreate-pods</command> during a <command>helm upgrade</command></term>
     <listitem>
      <para>
       When upgrading from &productname; 1.3.0 to 1.3.1, running <command>helm upgrade</command> does not require the <command>--recreate-pods</command> option to be used. A change to the active/passive model has allowed for previously unready pods to be upgraded, which allows for zero app downtime during the upgrade process.
      </para>
      <para>
       Upgrades between other versions will require the <command>--recreate-pods</command> option when using the <command>helm upgrade</command> command. For example, the command to upgrade <literal>uaa</literal> from &productname; 1.2.1 to 1.3.0 will be as follows:

      </para>
<screen>&prompt.user;helm upgrade --recreate-pods <replaceable>susecf-uaa</replaceable> suse/uaa \
    --values scf-config-values.yaml</screen>      
     </listitem>
    </varlistentry>
</variablelist>'>

<!--ENTITY uaac-prereq......................................................-->

<!ENTITY uaac-prereq
'<listitem xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
<para>
 <link xlink:href="https://docs.cloudfoundry.org/uaa/uaa-user-management.html">The
 Cloud Foundry <literal>uaa</literal> command line interface (UAAC)</link>.
</para>
<para>
 On &sle; systems, ensure the <literal>ruby-devel</literal> and <literal>gcc-c++</literal>
 packages have been installed before installing the <literal>cf-uaac</literal> gem.
</para>
<screen>&prompt.user;sudo zypper install ruby-devel gcc-c++</screen>
</listitem>'>

<!--ENTITY uaac-target......................................................-->

<!ENTITY uaac-target
'<step xmlns="http://docbook.org/ns/docbook">
<para>
 Use UAAC to target your <literal>uaa</literal> server:
</para>
<screen>&prompt.user;uaac target --skip-ssl-validation <replaceable>https://uaa.example.com:2793</replaceable></screen>
</step>'>

<!--ENTITY uaac-authenticate................................................-->

<!ENTITY uaac-authenticate
'<step xmlns="http://docbook.org/ns/docbook">
<para>
 Authenticate to the <literal>uaa</literal> server as
 <literal>admin</literal> using the
 <literal>UAA_ADMIN_CLIENT_SECRET</literal> set in your
 <filename>scf-config-values.yaml</filename> file:
</para>
<screen>&prompt.user;uaac token client get admin -s <replaceable>password</replaceable></screen>
</step>'>

<!--ENTITY helm-search-suse.................................................-->

<!ENTITY helm-search-suse
'<screen xmlns="http://docbook.org/ns/docbook">&prompt.user;helm search suse
NAME                            VERSION DESCRIPTION                                                                 
suse/cf                         &latestscfchart;  A Helm chart for SUSE Cloud Foundry                                           
suse/cf-usb-sidecar-mysql       1.0.1   A Helm chart for SUSE Universal Service Broker ...                               
suse/cf-usb-sidecar-postgres    1.0.1   A Helm chart for SUSE Universal Service Broker ...                                 
suse/console                    &lateststratoschart;  A Helm chart for deploying Stratos UI Console

suse/metrics                    1.0.0   A Helm chart for Stratos Metrics                                                       
suse/minibroker                 0.2.0   A minibroker for your minikube                                                           
suse/nginx-ingress              0.28.3  An nginx Ingress controller that uses ConfigMap...                                         
suse/uaa                        &latestscfchart;  A Helm chart for SUSE UAA
</screen>'>
