<!--...........................................................................
This file contains entities for repeated content entities, for re-printing 
content in multiple locations rather than using xrefs, so that users do not have 
to skip around so much. This works just like copy-paste, so be mindful of 
sections, titles, and paragraphs

Use xmlns="http://docbook.org/ns/docbook" on the first occurrence of every
parent formatting tag in each entity, to avoid "Namespace default prefix was not 
found" errors
............................................................................-->


<!--ENTITY deployment-pod-status............................................-->

<!ENTITY deployment-pod-status
'<variablelist xmlns="http://docbook.org/ns/docbook">
<varlistentry>
     <term>Some Pods Show as Not Running</term>
     <listitem>
      <para>
       Some <literal>uaa</literal> and <literal>scf</literal> pods perform only 
       deployment tasks, and it is normal for them to show as unready and 
       <literal>Completed</literal> after they have completed their tasks, as 
       these examples show: 
      </para>
<screen>
&prompt.user;kubectl get pods --namespace uaa
secret-generation-1-z4nlz   0/1       Completed

&prompt.user;kubectl get pods --namespace scf
secret-generation-1-m6k2h       0/1       Completed
post-deployment-setup-1-hnpln   0/1       Completed</screen>      
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Some Pods Terminate and Restart during Deployment</term>
     <listitem>
      <para>
       When monitoring the status of a deployment, pods can be observed
       transitioning from a <literal>Running</literal> state to a
       <literal>Terminating</literal> state, then returning to a
       <literal>Running</literal> again.
      </para>
      <para>
       If a <literal>RESTARTS</literal> count of 0 is maintained during this
       process, this is normal behavior and not due to failing pods. It is not
       necessary to stop the deployment. During deployment, pods will modify
       annotations on itself via the StatefulSet pod spec. In order to get the
       correct annotations on the running pod, it is stopped and restarted. 
       Under normal circumstances, this behavior should only result in a pod
       restarting once.
      </para>
     </listitem>
    </varlistentry>
</variablelist>'>

<!--ENTITY namespace-length ................................................-->

<!ENTITY namespace-length 
'<variablelist xmlns="http://docbook.org/ns/docbook">
<varlistentry>
     <term>Length of release names</term>
     <listitem>
      <para>
       Release names (for example, when you run <command>helm install --name</command>) 
have a maximum length of 36 characters.
      </para>
     </listitem>
    </varlistentry>
</variablelist>'>

<!--ENTITY fresh-namespace..................................................-->

<!ENTITY fresh-namespace
'<variablelist xmlns="http://docbook.org/ns/docbook">
<varlistentry>
     <term>Always install to a fresh namespace</term>
     <listitem>
      <para>
    If you are not creating a fresh &productname; installation, but have deleted 
    a previous deployment and are starting over, you must create new namespaces. 
    Do not re-use your old namespaces. The <command>helm delete</command> command 
    does not remove generated secrets from the <literal>scf</literal> and 
    <literal>uaa</literal> namespaces as it is 
    not aware of them. These leftover secrets may cause deployment failures. See 
    <xref linkend="sec.cap.rebuild.depl"/> for more information.
      </para>
     </listitem>
    </varlistentry>
</variablelist>'>    

<!--ENTITY readmefirst......................................................-->

<!ENTITY readmefirst
'<variablelist xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
<varlistentry>
     <term>README first!</term>
     <listitem>
      <para>
Before you start deploying &productname;, review the following documents:
      </para>
              <para>
         Read the Release Notes:
         <link xlink:href="https://www.suse.com/releasenotes/x86_64/SUSE-CAP/1/">
           Release Notes SUSE Cloud Application Platform</link>
        </para>
                <para>
            Read
         <xref linkend="cha.cap.depl.notes"/>
        </para>
     </listitem>
     </varlistentry>
     </variablelist>'>
     
<!--ENTITY dns-tables.......................................................-->

<!ENTITY dns-tables
'<informaltable xmlns="http://docbook.org/ns/docbook">
   <tgroup cols="2">
    <thead>
     <row>
      <entry>Domains</entry>
      <entry>Services</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>uaa.example.com</entry>
      <entry>uaa-uaa-public</entry>
     </row>
     <row>
      <entry>*.uaa.example.com</entry>
      <entry>uaa-uaa-public</entry>
     </row>
     <row>
      <entry>example.com</entry>
      <entry>router-gorouter-public</entry>
     </row>
     <row>
      <entry>*.example.com</entry>
      <entry>router-gorouter-public</entry>
     </row>
     <row>
      <entry>tcp.example.com</entry>
      <entry>tcp-router-tcp-router-public</entry>
     </row>
     <row>
      <entry>ssh.example.com</entry>
      <entry>diego-ssh-ssh-proxy-public</entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>

  <para xmlns="http://docbook.org/ns/docbook">
   A &productname; cluster exposes these four services:
  </para>

  <informaltable xmlns="http://docbook.org/ns/docbook">
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&kube; service descriptions</entry>
      <entry>&kube; service names</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>User Account and Authentication (<literal>uaa</literal>)</entry>
      <entry>uaa-uaa-public</entry>
     </row>
     <row>
      <entry>Cloud Foundry (CF) TCP routing service</entry>
      <entry>tcp-router-tcp-router-public</entry>
     </row>
     <row>
      <entry>CF application SSH access</entry>
      <entry>diego-ssh-ssh-proxy-public</entry>
     </row>
     <row>
      <entry>CF router</entry>
      <entry>router-gorouter-public</entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
  
  <para xmlns="http://docbook.org/ns/docbook">
   <literal>uaa-uaa-public</literal> is in the <literal>uaa</literal>
   namespace, and the rest are in the <literal>scf</literal> namespace.
  </para>'>

<!--ENTITY releases-table...................................................-->

<!ENTITY releases-table    
'<!-- TODO remember to keep this table updated -->
    <informaltable xmlns="http://docbook.org/ns/docbook">
   <tgroup cols="3">
    <thead>
     <row>
      <entry>CAP Release</entry>
      <entry>SCF and UAA &helm; Chart Version</entry>
      <entry>Stratos &helm; Chart Version</entry>
     </row>
    </thead>
    <tbody>
    <row>
      <entry>1.4 (current release)</entry>
      <entry>2.16.4</entry>
      <entry>2.4.0</entry>
     </row>
     <row>
      <entry>1.3.1</entry>
      <entry>2.15.2</entry>
      <entry>2.3.0</entry>
     </row>
     <row>
      <entry>1.3</entry>
      <entry>2.14.5</entry>
      <entry>2.2.0</entry>
     </row>
     <row>
      <entry>1.2.1</entry>
      <entry>2.13.3</entry>
      <entry>2.1.0</entry>
     </row>
     <row>
      <entry>1.2.0</entry>
      <entry>2.11.0</entry>
      <entry>2.0.0</entry>
     </row>
     <row>
      <entry>1.1.1</entry>
      <entry>2.10.1</entry>
      <entry>1.1.0</entry>
     </row>
     <row>
      <entry>1.1.0</entry>
      <entry>2.8.0</entry>
      <entry>1.1.0</entry>
     </row>
     <row>
      <entry>1.0.1</entry>
      <entry>2.7.0</entry>
      <entry>1.0.2</entry>
     </row>
     <row>
      <entry>1.0</entry>
      <entry>2.6.11</entry>
      <entry>1.0.0</entry>
     </row>
    </tbody>
   </tgroup>
   </informaltable>'> 

<!--ENTITY uaac-prereq......................................................-->

<!ENTITY uaac-prereq
'<listitem xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
<para>
 <link xlink:href="https://docs.cloudfoundry.org/uaa/uaa-user-management.html">The
 Cloud Foundry <literal>uaa</literal> command line interface (UAAC)</link>.
</para>
<para>
 On &sle; systems, ensure the <literal>ruby-devel</literal> and <literal>gcc-c++</literal>
 packages have been installed before installing the <literal>cf-uaac</literal> gem.
</para>
<screen>&prompt.user;sudo zypper install ruby-devel gcc-c++</screen>
</listitem>'>

<!--ENTITY uaac-target......................................................-->

<!ENTITY uaac-target
'<step xmlns="http://docbook.org/ns/docbook">
<para>
 Use UAAC to target your <literal>uaa</literal> server:
</para>
<screen>&prompt.user;uaac target --skip-ssl-validation <replaceable>https://uaa.example.com:2793</replaceable></screen>
</step>'>

<!--ENTITY uaac-authenticate................................................-->

<!ENTITY uaac-authenticate
'<step xmlns="http://docbook.org/ns/docbook">
<para>
 Authenticate to the <literal>uaa</literal> server as
 <literal>admin</literal> using the
 <literal>UAA_ADMIN_CLIENT_SECRET</literal> set in your
 <filename>scf-config-values.yaml</filename> file:
</para>
<screen>&prompt.user;uaac token client get admin --secret <replaceable>password</replaceable></screen>
</step>'>

<!--ENTITY helm-search-suse.................................................-->

<!ENTITY helm-search-suse
'<screen xmlns="http://docbook.org/ns/docbook">&prompt.user;helm search suse
NAME                            CHART VERSION   APP VERSION     DESCRIPTION 
suse/cf                         &latestscfchart;          1.4             A Helm chart for SUSE Cloud Foundry                         
suse/cf-usb-sidecar-mysql       1.0.1                           A Helm chart for SUSE Universal Service Broker Sidecar fo...
suse/cf-usb-sidecar-postgres    1.0.1                           A Helm chart for SUSE Universal Service Broker Sidecar fo...
suse/console                    &lateststratoschart;           &lateststratoschart;           A Helm chart for deploying Stratos UI Console               
suse/metrics                    1.0.0           1.0.0           A Helm chart for Stratos Metrics                            
suse/minibroker                 0.2.0                           A minibroker for your minikube                              
suse/nginx-ingress              0.28.4          0.15.0          An nginx Ingress controller that uses ConfigMap to store ...
suse/uaa                        &latestscfchart;          1.4             A Helm chart for SUSE UAA
</screen>'>

<!--ENTITY chart-version-fields.............................................-->

<!ENTITY chart-version-fields
'<para xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  There are slight differences in the way &cap; uses some &helm; chart fields
  than what is defined in <link xlink:href="https://helm.sh/docs/developing_charts"/>.
  Take note of the following fields:
 </para>
 <variablelist xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <varlistentry>
   <term><literal>APP VERSION</literal> (<literal>appVersion</literal> in <filename>Chart.yaml</filename>)</term>
   <listitem>
    <para>
     In &cap;, the <literal>APP VERSION</literal> field indicates the &cap;
     release that a &helm; chart belongs to. This is in contrast to indicating
     the version of the application as defined in
     <link xlink:href="https://helm.sh/docs/developing_charts/#the-appversion-field"/>.
     For example, in the <literal>suse/uaa</literal> &helm; chart, an
     <literal>APP VERSION</literal> of 1.4 is in reference to &cap; release 1.4
     and does not indicate <literal>uaa</literal> is version 1.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><literal>CHART VERSION</literal> (<literal>version</literal> in <filename>Chart.yaml</filename>)</term>
   <listitem>
    <para>
     In &cap;, the <literal>CHART VERSION</literal> field indicates the &helm;
     chart version, the same as defined in
     <link xlink:href="https://helm.sh/docs/developing_charts/#charts-and-versioning"/>.
     For &cap; &helm; charts, the chart version is also the release number of the
     coresponding component. For example, in the <literal>suse/uaa</literal>
     &helm; chart, a <literal>CHART VERSION</literal> of 2.16.4 also indicates
     <literal>uaa</literal> is release 2.16.4.
    </para>
   </listitem>
  </varlistentry>
 </variablelist>'>

<!--ENTITY chart-version-fields-note........................................-->

<!ENTITY chart-version-fields-note
'<note xmlns="http://docbook.org/ns/docbook">
 <title>Usage of &helm; Chart Fields in &cap;</title>
 &chart-version-fields;
</note>'>

<!--ENTITY stratos-figure...................................................-->

<!ENTITY stratos-figure
'<figure xmlns="http://docbook.org/ns/docbook">
 <title>Stratos UI Cloud Foundry Console</title>
 <mediaobject>
  <imageobject>
   <imagedata fileref="stratos.png" format="PNG" width="75&percnt;"/>
  </imageobject>
 </mediaobject>
</figure>'>

<!--ENTITY stratos-kubernetes-figure........................................-->

<!ENTITY stratos-kubernetes-figure
'<figure xmlns="http://docbook.org/ns/docbook">
 <title>&kube; Environment Information on Stratos</title>
 <mediaobject>
  <imageobject>
   <imagedata fileref="stratos-kubernetes-view.png" format="PNG" width="75&percnt;"/>
  </imageobject>
 </mediaobject>
</figure>'>

<!--ENTITY config-value-usage...............................................-->

<!ENTITY config-value-usage
'<para xmlns="http://docbook.org/ns/docbook">
  Take note of the following &helm; values when defining your
  <filename>scf-config-values.yaml</filename> file.
 </para>
 <variablelist xmlns="http://docbook.org/ns/docbook">
  <varlistentry>
   <term>GARDEN_ROOTFS_DRIVER</term>
   <listitem>
    <para>
     For &susecaaspreg; and other &kube; deployments where the nodes are based
     on &sle;, the <literal>btrfs</literal> file system driver must be used. By
     default, <literal>btrfs</literal> is selected as the default.
    </para>
    <para>
     For &aks;, &eks;, &gke;, and other &kube; deployments where the nodes are
     based on other operating systems, the <literal>overlay-xfs</literal>
     file system driver must be used.
    </para>
   </listitem>
  </varlistentry>
 </variablelist>'>

<!--ENTITY protect-uaa-admin-secret.........................................-->

<!ENTITY protect-uaa-admin-secret
'<important xmlns="http://docbook.org/ns/docbook">
  <title>Protect UAA_ADMIN_CLIENT_SECRET</title>
  <para>
   The UAA_ADMIN_CLIENT_SECRET is the master password for access to your &cap;
   cluster. Make this a very strong password, and protect it just as carefully
   as you would protect any root password.
  </para>
 </important>'>

<!--ENTITY install-helm-tiller..............................................-->

<!ENTITY install-helm-tiller
'<sect1 xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Install &helm; Client and &tiller;</title>
  <para>
   Refer to the documentation at
   <link xlink:href="https://docs.helm.sh/using_helm/#installing-helm"/>
   to install the &helm; client, <literal>helm</literal>, on your remote
   administration computer and &tiller;, the &helm; server component, on your
   &kube; cluster. Ensure your installation is appropriately secured
   according to your requirements as described in
   <link xlink:href="https://helm.sh/docs/using_helm/#securing-your-helm-installation"/>.
  </para>
 </sect1>'>

<!--ENTITY uaa-deploy-complete..............................................-->

<!ENTITY uaa-deploy-complete
'<para xmlns="http://docbook.org/ns/docbook">
  Wait until you have a successful <literal>uaa</literal> deployment before
  going to the next steps, which you can monitor with the
  <command>watch</command> command:
 </para>
<screen xmlns="http://docbook.org/ns/docbook">&prompt.user;watch --color &apos;kubectl get pods --namespace uaa&apos;</screen>
 <para xmlns="http://docbook.org/ns/docbook">
  When <literal>uaa</literal> is successfully deployed, the following is
  observed:
 </para>
 <itemizedlist xmlns="http://docbook.org/ns/docbook">
  <listitem>
   <para>
    For the <literal>secret-generation</literal> pod, the
    <literal>STATUS</literal> is <literal>Completed</literal> and the
    <literal>READY</literal> column is at <literal>0/1</literal>.
   </para>
  </listitem>
  <listitem>
   <para>
    All other pods have a <literal>Running</literal> <literal>STATUS</literal>
    and a <literal>READY</literal> value of <literal>n/n</literal>.
   </para>
  </listitem>
 </itemizedlist>
 <para xmlns="http://docbook.org/ns/docbook">
  Press <keycombo><keycap function="control"/><keycap>C</keycap></keycombo> to
  exit the <command>watch</command> command.
 </para>
'>

<!--ENTITY scf-deploy-complete..............................................-->

<!ENTITY scf-deploy-complete
'<para xmlns="http://docbook.org/ns/docbook">
  Wait until you have a successful <literal>scf</literal> deployment before
  going to the next steps, which you can monitor with the
  <command>watch</command> command:
 </para>
<screen xmlns="http://docbook.org/ns/docbook">&prompt.user;watch --color &apos;kubectl get pods --namespace scf&apos;</screen>
 <para xmlns="http://docbook.org/ns/docbook">
  When <literal>scf</literal> is successfully deployed, the following is
  observed:
 </para>
 <itemizedlist xmlns="http://docbook.org/ns/docbook">
  <listitem>
   <para>
    For the <literal>secret-generation</literal> and
    <literal>post-deployment-setup</literal> pods, the <literal>STATUS</literal>
    is <literal>Completed</literal> and the <literal>READY</literal> column is
    at <literal>0/1</literal>.
   </para>
  </listitem>
  <listitem>
   <para>
    All other pods have a <literal>Running</literal> <literal>STATUS</literal>
    and a <literal>READY</literal> value of <literal>n/n</literal>.
   </para>
  </listitem>
 </itemizedlist>
 <para xmlns="http://docbook.org/ns/docbook">
  Press <keycombo><keycap function="control"/><keycap>C</keycap></keycombo> to
  exit the <command>watch</command> command.
 </para>
'>

<!--ENTITY stratos-deploy-complete..............................................-->

<!ENTITY stratos-deploy-complete
'<para xmlns="http://docbook.org/ns/docbook">
  You can monitor the status of your <literal>stratos</literal> deployment with
  the <command>watch</command> command:
 </para>
<screen xmlns="http://docbook.org/ns/docbook">&prompt.user;watch --color &apos;kubectl get pods --namespace stratos&apos;</screen>
 <para xmlns="http://docbook.org/ns/docbook">
  When <literal>stratos</literal> is successfully deployed, the following is
  observed:
 </para>
 <itemizedlist xmlns="http://docbook.org/ns/docbook">
  <listitem>
   <para>
    For the <literal>volume-migration</literal> pod, the
    <literal>STATUS</literal> is <literal>Completed</literal> and the
    <literal>READY</literal> column is at <literal>0/1</literal>.
   </para>
  </listitem>
  <listitem>
   <para>
    All other pods have a <literal>Running</literal> <literal>STATUS</literal>
    and a <literal>READY</literal> value of <literal>n/n</literal>.
   </para>
  </listitem>
 </itemizedlist>
 <para xmlns="http://docbook.org/ns/docbook">
  Press <keycombo><keycap function="control"/><keycap>C</keycap></keycombo> to
  exit the <command>watch</command> command.
 </para>
'>

