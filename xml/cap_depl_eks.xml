<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter version="5.0" xml:id="cha-cap-depl-eks"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink">
 <info>
  <title>Deploying &productname; on &eks-full; (EKS)</title>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <important>
     &readmefirst;
 </important>
 <para>
  This chapter describes how to deploy &productname; on &eks-full; (EKS), using
  Amazon's Elastic Load Balancer to provide fault-tolerant access to your
  cluster.
 </para>
 <sect1 xml:id="sec-cap-eks-prereqs">
  <title>Prerequisites</title>

  <para>
   The following are required to deploy and use &productname; on EKS:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     An Amazon AWS account with sufficient permissions. For details, refer to
     <link xlink:href="https://docs.aws.com/eks/latest/userguide/security-iam.html"/>.
    </para>
   </listitem>
   <listitem>
    <para>
     <command>eksctl</command>, a command line client to create and manage
     &kube; clusters on &eks;. See
     <link xlink:href="https://docs.aws.amazon.com/eks/latest/userguide/getting-started-eksctl.html"/>
     for more information and installation instructions.
    </para>
   </listitem>

   <!-- listitems: Install steps and links -->
   &cfcli-prereq;
   &kubectl-prereq;
   &curl-prereq;
  </itemizedlist>

  &min-deploy-note;
 </sect1>

 <sect1 xml:id="sec-cap-create-eks-cluster">
  <title>Create an EKS Cluster</title>

  <para>
   Now you can create an EKS cluster using <command>eksctl</command>. Be sure to
   keep in mind the following minimum requirements of the cluster.
  </para>

  <itemizedlist>
   <listitem>
    <para>
     Node sizes are at least <literal>t3.xlarge</literal>.
    </para>
   </listitem>
   <listitem>
    <para>
     The <literal>NodeVolumeSize</literal> must be a minimum of &node_size; GB.
    </para>
   </listitem>
   <listitem>
    <para>
     The &kube; version is at least &min_kube;.
    </para>
   </listitem>
  </itemizedlist>
  <para>
   As a minimal example, the following command will create an EKS cluster. To
   see additional configuration parameters, see <command>eksctl create cluster --help</command>.
  </para>

<screen>&prompt.user;eksctl create cluster --name <replaceable>kubecf</replaceable> --version <replaceable>&min_kube;</replaceable> \
--nodegroup-name <replaceable>standard-workers</replaceable> --node-type <replaceable>t3.xlarge</replaceable> \
--nodes <replaceable>3</replaceable> --node-volume-size <replaceable>&node_size;</replaceable> \
--region <replaceable>us-east-2</replaceable> --managed \
--ssh-access --ssh-public-key <replaceable>/path/to/some_key.pub</replaceable>
</screen>
 </sect1>

 <!-- Entry defined in xml/repeated-content-decl.ent -->
 &install-helm;

 <sect1 xml:id="sec-cap-eks-storage-class">
  &storage-class;
 </sect1>

 <sect1 xml:id="sec-cap-eks-configuration">
  <title>Deployment Configuration</title>

  <para>
   Use this example &values-filename; as a template
   for your configuration.
  </para>
  
  &values-file-changes;

  &supported-domains;

  &example-config;
 </sect1>

 <!-- Begin optional features -->

 <sect1 xml:id="sec-cap-eks-certificates">
  <!-- Entry defined in xml/repeated-content-decl.ent -->
  &certificates;
 </sect1>

 <sect1 xml:id="sec-cap-eks-ingress">
  <!-- Entry defined in xml/repeated-content-decl.ent -->
  &ingress-controller;
 </sect1>

 <sect1 xml:id="sec-cap-eks-affinity">
  <!-- Entry defined in xml/repeated-content-decl.ent -->
  &affinity;
 </sect1>

 <sect1 xml:id="sec-cap-eks-high-availability">
  <!-- Entry defined in xml/repeated-content-decl.ent -->
  &high-availability;
 </sect1>

 <sect1 xml:id="sec-cap-eks-external-blobstore">
  <!-- Entry defined in xml/repeated-content-decl.ent -->
  &external-blobstore;
 </sect1>

 <sect1 xml:id="sec-cap-eks-external-database">
  <!-- Entry defined in xml/repeated-content-decl.ent -->
  &external-database;
 </sect1>

 <!-- End optional features -->

 <sect1 xml:id="sec-cap-addrepo-eks">
  <title>Add the &kube; Charts Repository</title>

  <para>
   Download the &suse; &kube; charts repository with &helm;:
  </para>

<screen>&prompt.user;helm repo add <replaceable>suse</replaceable> https://kubernetes-charts.suse.com/</screen>

  <para>
   You may replace the example <replaceable>suse</replaceable> name with any
   name. Verify with <command>helm</command>:
  </para>

<screen>&prompt.user;helm repo list
NAME            URL
stable          https://kubernetes-charts.storage.googleapis.com
local           http://127.0.0.1:8879/charts
suse            https://kubernetes-charts.suse.com/</screen>

  <para>
   List your chart names, as you will need these for some operations:
  </para>

&helm-search-suse;

 </sect1>
 <sect1 xml:id="sec-cap-cap-on-eks">
  <title>Deploying &productname;</title>
  <para>
   This section describes how to deploy &productname; on &eks;.
  </para>

  &kubecf-operator-versions;

  <sect2 xml:id="sec-cap-eks-deploy-operator">
   &deploy-operator;
  </sect2>

  <sect2 xml:id="sec-cap-eks-deploy-kubecf">
   <title>Deploy &kubecf;</title>
   <procedure>
    &deploy-kubecf;
    <step>
     <para>
      Create DNS CNAME records for the public services.
     </para>
     &dns-mappings;
    </step>
    <step>
     <para>
      When all pods are fully ready, verify your deployment.
     </para>
     &cf-auth;
    </step>
   </procedure>
  </sect2>
 </sect1>

 <!-- Begin optional features -->

 <sect1 xml:id="sec-cap-eks-ldap">
  <!-- Entry defined in xml/repeated-content-decl.ent -->
  &ldap;
 </sect1>

 <!-- End optional features -->

 <!-- sect1 for PV resizing -->
 <!-- &resize-persistent-volume; -->
</chapter>
