<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter version="5.0" xml:id="cha.cap.upgrade"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink">
 <info>
  <title>Upgrading &productname;</title>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>

 <sect1 xml:id="sec.cap.update">
  <title>Upgrading &productname;</title>

  <para>
   UAA, SCF, and Stratos together make up a &productname; release. Maintenance
   updates are delivered as container images from the &suse; registry and
   applied with &helm;. (Always review the
   <link xlink:href="https://www.suse.com/releasenotes/">Release Notes</link>
   for additional upgrade information.)
  </para>
  
  <warning>
      <title><command>helm rollback</command> is not supported</title>
      <para>          
          <command>helm rollback</command> is not supported in &productname; or 
          in upstream &cf;, and may break your cluster completely, because 
          database migrations only run forward and cannot be reversed. Database 
          schema can change over time. During upgrades both pods of the current 
          and the next release may run concurrently, so the schema must stay 
          compatible with the immediately previous release. But there is no
          way to guarantee such compatibility for future upgrades. One way to
	  address this is to perform a full raw data backup and restore. (See
	  <xref linkend="sec.cap.backup-restore-of-raw-data"/>)
      </para>
  </warning>
         
  <para>
   The supported upgrade method is to install all upgrades, in order. Skipping
   releases is not supported. This table lists the &helm; chart versions for
   each release:
  </para>

  <informaltable>
   <tgroup cols="3">
    <thead>
     <row>
      <entry>CAP Release</entry>
      <entry>SCF and UAA &helm; Chart Version</entry>
      <entry>Stratos &helm; Chart Version</entry>
     </row>
    </thead>
    <tbody>
     <row>
<!-- TODO remember to keep this table updated -->
      <entry>1.3 (current release)</entry>
      <entry>2.14.5</entry>
      <entry>2.2.0</entry>
     </row>
     <row>
      <entry>1.2.1</entry>
      <entry>2.13.3</entry>
      <entry>2.1.0</entry>
     </row>
     <row>
      <entry>1.2.0</entry>
      <entry>2.11.0</entry>
      <entry>2.0.0</entry>
     </row>
     <row>
      <entry>1.1.1</entry>
      <entry>2.10.1</entry>
      <entry>1.1.0</entry>
     </row>
     <row>
      <entry>1.1.0</entry>
      <entry>2.8.0</entry>
      <entry>1.1.0</entry>
     </row>
     <row>
      <entry>1.0.1</entry>
      <entry>2.7.0</entry>
      <entry>1.0.2</entry>
     </row>
     <row>
      <entry>1.0</entry>
      <entry>2.6.11</entry>
      <entry>1.0.0</entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>

  <para>
   Do not make changes to pod counts when you upgrade. You may make sizing
   changes before or after an upgrade (see <xref linkend="sec.cap.ha-prod"/>).
  </para>

  <para>
   Use &helm; to check for updates:
  </para>

<screen>&prompt.user;helm repo update
Hang tight while we grab the latest from your chart repositories...
...Skip local chart repository
...Successfully got an update from the "stable" chart repository
...Successfully got an update from the "suse" chart repository
Update Complete. ⎈ Happy Helming!⎈
</screen>

  <para>
   Get your currently-installed release versions and chart names (your releases
   may have different names than the examples), and then view the upgrade
   versions:
  </para>

<screen>&prompt.user;helm list
NAME            REVISION  UPDATED                  STATUS    CHART           NAMESPACE
<replaceable>susecf-console</replaceable>  1         Tue Aug 14 11:53:28 2018 DEPLOYED  console-2.0.0   stratos  
<replaceable>susecf-scf</replaceable>      1         Tue Aug 14 10:58:16 2018 DEPLOYED  cf-2.11.0       scf      
<replaceable>susecf-uaa</replaceable>      1         Tue Aug 14 10:49:30 2018 DEPLOYED  uaa-2.11.0      uaa

&prompt.user;helm search suse
NAME                            VERSION DESCRIPTION
suse/cf-opensuse                &latestscfchart;  A Helm chart for SUSE Cloud Foundry
suse/uaa-opensuse               &latestuaachart;  A Helm chart for SUSE UAA
suse/cf                         &latestscfchart;  A Helm chart for SUSE Cloud Foundry
suse/cf-usb-sidecar-mysql       1.0.1   A Helm chart for SUSE Universal Service Broker ...
suse/cf-usb-sidecar-postgres    1.0.1   A Helm chart for SUSE Universal Service Broker ...
suse/console                    &lateststratoschart;   A Helm chart for deploying Stratos UI Console
suse/metrics                    1.0.0   A Helm chart for Stratos Metrics
suse/nginx-ingress              0.28.3  An nginx Ingress controller that uses ConfigMap...
suse/uaa                        &latestuaachart;  A Helm chart for SUSE UAA
</screen>

  <para>
   View all charts in a release, and their versions:
  </para>

<screen>&prompt.user;helm search suse/uaa -l
NAME            VERSION     DESCRIPTION              
suse/uaa        2.14.5      A Helm chart for SUSE UAA
suse/uaa        2.13.3      A Helm chart for SUSE UAA
suse/uaa        2.11.0      A Helm chart for SUSE UAA
suse/uaa        2.10.1      A Helm chart for SUSE UAA
suse/uaa        2.8.0       A Helm chart for SUSE UAA
suse/uaa        2.7.0       A Helm chart for SUSE UAA
...
</screen>

  <para>
   When you have verified that the upgrade is the next release from your
   current release, run the following commands to perform the upgrade. What if
   you missed a release? See <xref linkend="sec.cap.skipped-release"/>.
  </para>

  <important>
   <title>Changes to Commands</title>
   <para>
    Take note of the new commands for extracting and using secrets and
    certificates. If you are still on the &productname; 1.1 release, update
    your <filename>scf-config-values.yaml</filename> file with the changes for
    secrets handling and external IP addresses. (See
    <xref linkend="sec.cap.configure-prod"/> for an example.)
   </para>
  </important>

  <para>
   Just like your initial installation, wait for each command to complete
   before running the next command. Monitor progress with the
   <command>watch</command> command for each namespace, e.g. <command>watch -c
   'kubectl get pods --namespace uaa'</command>. First upgrade UAA:
  </para>

<screen>&prompt.user;helm upgrade --recreate-pods <replaceable>susecf-uaa</replaceable> suse/uaa \
    --values scf-config-values.yaml</screen>

  <para>
   Then extract the UAA secret for SCF to use:
  </para>

<screen>&prompt.user;SECRET=$(kubectl get pods --namespace uaa \
-o jsonpath='{.items[?(.metadata.name=="uaa-0")].spec.containers[?(.name=="uaa")].env[?(.name=="INTERNAL_CA_CERT")].valueFrom.secretKeyRef.name}')

&prompt.user;CA_CERT="$(kubectl get secret $SECRET --namespace uaa \
-o jsonpath="{.data['internal-ca-cert']}" | base64 --decode -)"</screen>

  <para>
   Upgrade SCF, and note that if you see an error message like <literal>lost
   connection to pod Error: UPGRADE FAILED: transport is closing</literal>,
   this is normal. If you can run <command>watch -c 'kubectl get pods
   --namespace scf'</command> then everything is all right.
  </para>

<screen>&prompt.user;helm upgrade --recreate-pods <replaceable>susecf-scf</replaceable> suse/cf \
--values scf-config-values.yaml --set "secrets.UAA_CA_CERT=${CA_CERT}"</screen>

  <para>
   Then upgrade Stratos:
  </para>

<screen>&prompt.user;helm upgrade --recreate-pods <replaceable>susecf-console</replaceable> suse/console \
 --values scf-config-values.yaml</screen>

  <para>
   Your pods will be unavailable to answer requests until the upgrade is
   complete.
  </para>

  <!-- Internal cf-usb broker broker endpoint URL change involving 1.3 -->
  <xi:include href="sec_cf_usb_url.xml"/>

 </sect1>
 <sect1 xml:id="sec.cap.skipped-release">
  <title>Installing Skipped Releases</title>

  <para>
   By default, &helm; always installs the latest release. What if you
   accidentally skipped a release, and need to apply it before upgrading to the
   current release? Install the missing release by specifying the &helm; chart
   version number. For example, your current UAA and SCF versions are 2.10.1.
   Consult the table at the beginning of this chapter to see which releases you
   have missed. In this example, the missing &helm; chart version for UAA and
   SCF is 2.11.0. Use the <command>--version</command> option to install a
   specific version:
  </para>

<screen>&prompt.user;helm upgrade --recreate-pods --version 2.11.0 <replaceable>susecf-uaa</replaceable> suse/uaa \
--values scf-config-values.yaml</screen>

  <para>
   Be sure to install the corresponding versions for SCF and Stratos.
  </para>
 </sect1>
</chapter>
