<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter version="5.0" xml:id="cha-cap-credhub"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink">
 <info>
  <title>Integrating CredHub with &productname;</title>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <para>
  &productname; supports CredHub integration. You should already have a working
  CredHub instance, a CredHub service on your cluster, then apply the steps in
  this chapter to connect &productname;.
 </para>
 <sect1 xml:id="sec-cap-credhub">
  <title>Installing the CredHub Client</title>

  <para>
   Start by creating a new directory for the CredHub client on your local
   workstation, then download and unpack the CredHub client. The following
   example is for the 2.2.0 Linux release. For other platforms and current
   releases, see the cloudfoundry-incubator/credhub-cli at
   <link xlink:href="https://github.com/cloudfoundry-incubator/credhub-cli/releases"/>
  </para>

<screen>&prompt.user;mkdir <replaceable>chclient</replaceable>
&prompt.user;cd <replaceable>chclient</replaceable>
&prompt.user;wget https://github.com/cloudfoundry-incubator/credhub-cli/releases/download/2.2.0/credhub-linux-2.2.0.tgz
&prompt.user;tar zxf credhub-linux-2.2.0.tgz
</screen>
 </sect1>
 <sect1 xml:id="sec-cap-credhub-enable">
  <title>Enabling and Disabling CredHub</title>

  <para>
   CredHub is enabled by default. To disable it, add the following the following
   block to your &values-filename; file.
  </para>

<screen>features:
  credhub:
    enabled: false
</screen>

  <para>
   To enable CredHub again, update the above block in your &values-filename; so that
   <literal>enabled</literal> is set to <literal>true</literal>.
  </para>

  <!-- Applying change to new vs existing deployments -->
  &config-new-vs-existing;

  <warning>
   <para>
    On occasion, the <literal>credhub</literal> pod may fail to start due to
    database migration failures; this has been spotted intermittently on
    &aks-full; and to a lesser extent, other public clouds.
    In these situations, manual intervention is required to track the last
    completed transaction in <literal>credhub_user</literal> database and
    update the flyway schema history table with the record of the last
    completed transaction. Please contact support for further instructions.
   </para>
  </warning>
 </sect1>
 <sect1 xml:id="sec-cap-credhub-connect">
  <title>Connecting to the CredHub Service</title>

  <para>
   Set environment variables for the CredHub client, your CredHub service
   location, and &cap; namespace. In these guides the example namespace is
   <literal>kubecf</literal>:
  </para>
<screen>&prompt.user;CH_CLI=~/chclient/credhub
&prompt.user;CH_SERVICE=<replaceable>https://credhub.example.com</replaceable>
&prompt.user;NAMESPACE=<replaceable>kubecf</replaceable>
</screen>
  <para>
   Set up the CredHub service location:
  </para>
<screen>
&prompt.user;SECRET="$(kubectl get secrets --namespace "${NAMESPACE}" | awk '/^secrets-/ { print $1 }')"
&prompt.user;CH_SECRET="$(kubectl get secrets --namespace "${NAMESPACE}" "${SECRET}" --output jsonpath="{.data['uaa-clients-credhub-user-cli-secret']}"|base64 --decode)"
&prompt.user;CH_CLIENT=credhub_user_cli
&prompt.user;echo Service ......@ $CH_SERVICE
&prompt.user;echo CH cli Secret @ $CH_SECRET
</screen>
  <para>
   Set the CredHub target through its &kube; service, then log into CredHub:
  </para>
<screen>
&prompt.user;"${CH_CLI}" api --skip-tls-validation --server "${CH_SERVICE}"
&prompt.user;"${CH_CLI}" login --client-name="${CH_CLIENT}" --client-secret="${CH_SECRET}"
</screen>
  <para>
   Test your new connection by inserting and retrieving some fake credentials:
  </para>
<screen>
&prompt.user;"${CH_CLI}" set --name FOX --type value --value 'fox over lazy dog'
&prompt.user;"${CH_CLI}" set --name DOG --type user --username dog --password fox
&prompt.user;"${CH_CLI}" get --name FOX
&prompt.user;"${CH_CLI}" get --name DOG
</screen>
 </sect1>

<!-- N/A for 2.0, but may be required in the future
 <sect1 xml:id="sec-cap-credhub-upgrade-considerations">
  <title>Upgrade Considerations</title>
 </sect1>
-->
</chapter>
